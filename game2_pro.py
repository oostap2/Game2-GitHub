record, hard_record_int = 1, 0
import pygame
from pygame.math import Vector2
from random import randint
import sys
pygame.init()
wikno = (500,500)
window = pygame.display.set_mode(wikno)
COLOR=(150,150,255)
window.fill(COLOR)
clock = pygame.time.Clock()
program_work = True
pygame.display.set_caption("Game 2 (pro)")
#pygame.display.set_mode(wikno, pygame.DOUBLEBUF | pygame.HWSURFACE | pygame.FULLSCREEN) ### ЕКСПЕРМЕНТ!

class Knopka2():
    def __init__(self, x:int, y:int, x_p:int, y_p:int, ko:tuple[int, int, int] = (0,0,0)):
        self.x = x
        self.y = y
        self.x_p = x_p
        self.y_p = y_p
        self.ko = ko  # color
    def f(self) -> None: # draw
        pygame.draw.rect(window, self.ko, pygame.Rect(self.x, self.y, self.x_p, self.y_p))
    def g(self, enemy) -> bool: # check colision
        return pygame.Rect(self.x, self.y, self.x_p, self.y_p).colliderect(pygame.Rect(enemy.x, enemy.y, enemy.x_p, enemy.y_p))

class Knopka():
    def __init__(self, x, y, size, ko, text):
        self.x = x
        self.y = y
        self.size = size
        self.ko = ko  # колір
        self.text = text
        self.text_size = int( self.size * 2.5 / len(self.text) )
        self.font1 = pygame.font.Font(None, self.text_size).render(self.text, True, (0,0,0))
    def f(self):
        pygame.draw.rect(window, self.ko, pygame.Rect(self.x, self.y, self.size, self.size))
        window.blit(self.font1, (self.x, self.y + self.size/2 - self.text_size/3))
    def g(self):
        return pygame.Rect(self.x, self.y, self.size, self.size).colliderect(pygame.Rect(mouse_pos[0], mouse_pos[1], 1, 1))

class Info():
    def __init__(self, x, y, size, ko, text):
        self.x = x
        self.y = y
        self.text = text
        if not '\n' in self.text:
            self.plural = False
            self.font1 = pygame.font.Font(None, size).render(self.text, True, ko)
        else:
            self.plural = True
            self.fonts = []
            for t in self.text.split('\n'):
                self.fonts.append(pygame.font.Font(None, size).render(t, True, ko))
    def f(self):
        if self.plural:
            y = self.y
            for font in self.fonts:
                window.blit(font, (self.x, y))
                y += 50
        else:
            window.blit(self.font1, (self.x, self.y))

riwni1 = [ []
, # 1
[ [], [[60, 280, 160, 160 ]], [[280, 60, 160, 160 ]] ]
, # 2
[[[181, 10, 43, 264], [181, 237, 229, 39], [282, 267, 46, 113], [178, 388, 53, 103], [9, 138, 121, 38], [50, 240, 240, 36], [73, 260, 44, 177]], [[239, 22, 75, 74]], [[18, 24, 34, 34]]]
, # 3
[[[86, 391, 405, 59], [9, 272, 420, 70], [124, 140, 367, 20], [322, 9, 27, 99], [234, 36, 31, 107], [173, 9, 24, 104], [110, 35, 18, 125]], [[374, 33, 57, 58]], [[398, 459, 83, 24]]]
, # 4
[[[177, 387, 320, 29], [85, 71, 406, 59], [1, 224, 109, 267], [10, 203, 401, 38], [335, 203, 86, 126], [95, 229, 129, 53], [7, 10, 486, 121], [45, 154, 449, 16]], [[191, 429, 279, 48]], [[203, 139, 49, 11], [433, 139, 52, 12]]]
, # 5
[[[315, 9, 36, 378], [72, 100, 248, 34], [65, 100, 48, 287], [191, 193, 46, 300], [99, 327, 54, 37], [150, 239, 51, 38], [103, 129, 50, 59], [233, 203, 50, 32], [271, 286, 59, 36], [232, 366, 45, 34], [275, 441, 74, 24], [315, 351, 36, 114], [7, 118, 27, 19], [29, 169, 38, 24], [4, 285, 33, 55], [10, 451, 196, 41], [346, 405, 89, 25]], [[194, 24, 102, 60]], [[411, 430, 79, 25]]]
, # 6
[[[280, 319, 42, 173], [280, 227, 213, 37], [182, 163, 48, 220], [8, 425, 281, 44], [7, 293, 116, 50], [47, 163, 118, 48], [225, 163, 208, 54], [301, 44, 58, 119], [182, 7, 44, 94], [7, 7, 185, 44]], [[382, 414, 101, 70]], [[365, 18, 116, 138]]] 
, # 7
[[[222, 229, 270, 38], [225, 10, 49, 181], [68, 58, 85, 321], [136, 286, 318, 46], [408, 316, 46, 129], [328, 382, 30, 109], [235, 322, 41, 125], [182, 357, 24, 134], [145, 145, 93, 46], [178, 7, 24, 113], [5, 316, 34, 175], [33, 58, 59, 220]], [[310, 26, 160, 178]], [[203, 12, 19, 33], [42, 459, 136, 28], [197, 8, 36, 38]]]
, # 8
[[[143, 5, 61, 32], [254, 9, 51, 29], [7, 364, 239, 40], [309, 296, 41, 195], [8, 203, 407, 29], [61, 275, 289, 52], [393, 203, 54, 243], [418, 8, 75, 153], [361, 46, 18, 160], [288, 7, 27, 126], [156, 151, 161, 22], [272, 118, 44, 42], [6, 4, 106, 206]], [[15, 411, 25, 70]], [[159, 35, 34, 91], [160, 92, 122, 34], [261, 36, 32, 90]]]
, # 9
[[[61, 224, 372, 37], [15, 288, 307, 31], [376, 293, 114, 24], [113, 341, 324, 34], [19, 401, 232, 27], [299, 406, 195, 19], [8, 299, 8, 4], [4, 403, 19, 6], [237, 421, 14, 27], [237, 447, 202, 16]], [[12, 21, 475, 172]], [[11, 412, 6, 76]]]
, # 10
[[[30, 338, 45, 51], [89, 403, 95, 17], [123, 438, 16, 31], [150, 299, 31, 80], [31, 222, 186, 33], [371, 219, 30, 85], [245, 313, 88, 30], [263, 177, 34, 110], [240, 383, 33, 88], [321, 409, 64, 27], [377, 337, 70, 22], [8, 141, 131, 36], [186, 53, 30, 126], [386, 93, 107, 65], [279, 9, 49, 124], [366, 34, 98, 28], [109, 39, 30, 64], [8, 280, 97, 27]], [[417, 404, 70, 83]], [[11, 13, 62, 63]]]
, # 11
[[[231, 6, 17, 485], [16, 122, 238, 63], [160, 7, 83, 117], [349, 71, 40, 424], [384, 312, 62, 44], [438, 221, 53, 48], [369, 141, 84, 34], [414, 9, 77, 100], [241, 3, 67, 144], [283, 6, 30, 443], [44, 393, 189, 32], [126, 451, 43, 40], [42, 393, 51, 72], [161, 171, 31, 180], [6, 318, 75, 34], [107, 217, 28, 179], [27, 217, 87, 76], [354, 34, 12, 8], [203, 372, 5, 9]], [[428, 436, 56, 50], [174, 429, 53, 58]], [[215, 185, 54, 104]]]
, # 12
[[[231, 6, 17, 485], [148, 93, 45, 302], [49, 93, 99, 38], [149, 356, 288, 39], [49, 93, 29, 354], [49, 430, 136, 27], [77, 123, 72, 86], [49, 43, 28, 80], [129, 7, 102, 63], [98, 43, 5, 23], [72, 350, 47, 83], [99, 300, 51, 24], [323, 87, 45, 283], [273, 87, 168, 38], [398, 157, 92, 166], [242, 6, 250, 47], [395, 360, 42, 84], [321, 423, 35, 72]], [[213, 208, 12, 51], [252, 220, 13, 51]], [[251, 443, 67, 44], [81, 211, 44, 62]]]
, # 13
[[[231, 6, 17, 485], [235, 390, 256, 17], [245, 360, 254, 17], [233, 199, 213, 120], [285, 125, 206, 39], [285, 49, 41, 76], [369, 9, 46, 83], [369, 67, 85, 25], [9, 73, 182, 52], [35, 277, 251, 42], [35, 277, 32, 182], [105, 348, 26, 143], [163, 317, 28, 141]], [[249, 379, 239, 9], [251, 325, 42, 32], [193, 325, 35, 63]], [[421, 11, 68, 40], [11, 11, 218, 44]]]
, # 14
[[[231, 6, 17, 485], [45, 81, 404, 46], [299, 172, 192, 36], [299, 254, 194, 35], [7, 172, 180, 33], [55, 254, 185, 36], [55, 338, 394, 38], [396, 339, 53, 109], [55, 339, 57, 116], [157, 411, 28, 80], [310, 414, 31, 81]], [[12, 15, 215, 48], [253, 15, 232, 47]], [[214, 464, 62, 31]]]
, # 15
[[[231, 6, 17, 485], [243, 6, 248, 422], [355, 314, 138, 177], [53, 443, 124, 28], [6, 394, 191, 52], [167, 255, 30, 160], [103, 177, 160, 34], [75, 239, 109, 156], [28, 33, 23, 340], [28, 33, 137, 164]], [[11, 448, 40, 40]], [[173, 125, 52, 46]]]
, # 16
[[[231, 6, 17, 485], [153, 76, 18, 177], [79, 252, 266, 25], [80, 7, 27, 198], [35, 252, 54, 25], [35, 39, 20, 214], [129, 211, 31, 49], [153, 38, 43, 55], [5, 403, 174, 14], [151, 417, 28, 58], [89, 441, 41, 52], [47, 341, 190, 21], [9, 319, 21, 12], [303, 267, 42, 181], [332, 385, 112, 63], [403, 55, 41, 330], [293, 55, 110, 106], [293, 161, 44, 42]], [[173, 122, 53, 125], [354, 166, 45, 141], [22, 422, 57, 36]], [[7, 281, 254, 31]]]
, # 17
[[[231, 6, 17, 485], [71, 243, 163, 20], [71, 71, 81, 172], [71, 173, 120, 70], [8, 291, 233, 10], [9, 325, 192, 20], [177, 345, 24, 112], [48, 432, 129, 25], [48, 371, 21, 61], [69, 371, 74, 22], [242, 239, 186, 20], [402, 259, 26, 163], [349, 322, 22, 172], [316, 137, 179, 34], [316, 57, 49, 80], [365, 57, 74, 25]], [[12, 303, 217, 18], [253, 263, 65, 223]], [[195, 183, 31, 54], [72, 397, 23, 32], [370, 86, 65, 47]]]
, # 18
[[[231, 6, 17, 485], [137, 251, 327, 66], [438, 42, 26, 275], [302, 42, 136, 40], [302, 82, 64, 100], [284, 308, 41, 141], [325, 408, 118, 41], [360, 346, 132, 36], [137, 304, 58, 148], [48, 440, 89, 12], [48, 198, 19, 242], [99, 198, 62, 25], [123, 9, 38, 214], [48, 120, 31, 80], [7, 7, 239, 53]], [[195, 183, 31, 54], [72, 397, 23, 32], [370, 86, 65, 47]], [[204, 331, 24, 31], [252, 331, 26, 31]]]
, # 19
[[[231, 6, 17, 485], [302, 307, 11, 98], [165, 302, 15, 123], [151, 398, 348, 101], [201, 56, 228, 197], [391, 241, 38, 111], [352, 319, 77, 33], [63, 231, 146, 22], [63, 253, 35, 185], [37, 37, 109, 134]], [[250, 332, 13, 37], [215, 324, 13, 55]], [[211, 10, 190, 219]]]
, # 20
[[[231, 6, 17, 485], [305, 408, 6, 63], [343, 465, 18, 30], [413, 434, 57, 33], [458, 386, 35, 26], [428, 263, 43, 46], [287, 179, 141, 84], [237, 126, 54, 28], [464, 149, 27, 86], [8, 121, 139, 38], [322, 120, 172, 39], [59, 215, 381, 112], [295, 327, 145, 120], [59, 253, 121, 194]], [[11, 12, 217, 76], [249, 12, 239, 75]], [[121, 237, 237, 110]]]
, # 21
[[[240, 283, 129, 26], [345, 283, 24, 110], [233, 373, 112, 20], [233, 283, 16, 90], [98, 251, 271, 47], [98, 298, 35, 195], [98, 97, 115, 201], [210, 97, 203, 32], [297, 169, 198, 40]], [[138, 309, 87, 175]], [[20, 18, 71, 49], [14, 413, 79, 71]]]
, # 22
[[[140, 76, 71, 416], [140, 76, 274, 47], [43, 76, 97, 23], [9, 131, 93, 22], [45, 187, 101, 22], [9, 261, 92, 30], [59, 344, 92, 39], [273, 188, 200, 235]], [[61, 219, 72, 20]], [[445, 428, 39, 57]]]
, # 23
[[[109, 365, 383, 54], [7, 198, 368, 45], [5, 242, 229, 64], [9, 10, 482, 155], [325, 198, 104, 83]], [[448, 431, 34, 52]], [[243, 173, 54, 12], [13, 167, 38, 12]]]
, # 24
[[[0, 0, 83, 152], [57, 152, 26, 284], [57, 410, 164, 26], [203, 137, 18, 273], [336, 56, 13, 441], [125, 56, 211, 16], [125, 72, 20, 285], [217, 373, 78, 14], [281, 387, 14, 72], [245, 422, 13, 71], [253, 301, 87, 29], [405, 54, 30, 381], [125, 54, 280, 3], [346, 54, 59, 172], [218, 137, 91, 12]], [[243, 173, 54, 12], [13, 167, 38, 12]], [[343, 217, 76, 118]]]
, # 25
[[[425, 161, 23, 252], [305, 376, 143, 37], [305, 157, 15, 165], [320, 157, 128, 28], [213, 292, 100, 30], [213, 292, 30, 206], [213, 1, 29, 229], [59, 95, 103, 400], [5, 453, 275, 42], [289, 66, 124, 68]], [[347, 221, 70, 113]], [[153, 403, 69, 68], [5, 403, 69, 69]]]
, # 26
[[[116, 87, 19, 404], [43, 87, 73, 32], [6, 151, 75, 32], [72, 183, 9, 85], [35, 293, 88, 18], [35, 229, 8, 64], [129, 430, 302, 11], [417, 60, 14, 370], [337, 14, 23, 356], [167, 346, 193, 24], [131, 279, 164, 12], [279, 54, 16, 225], [231, 8, 16, 221], [173, 209, 58, 20], [353, 357, 34, 10], [382, 313, 44, 16], [357, 241, 41, 20], [383, 277, 43, 18], [379, 172, 40, 10], [358, 79, 31, 9], [255, 295, 88, 65]], [[143, 301, 17, 122], [15, 320, 97, 168]], [[133, 438, 30, 55]]]
, # 27
[[[100, 103, 20, 392], [120, 103, 298, 25], [177, 177, 314, 47], [113, 275, 312, 36], [396, 311, 29, 128], [307, 367, 35, 128], [8, 107, 57, 164], [45, 318, 27, 122], [45, 318, 68, 32]], [[123, 315, 180, 172]], [[37, 451, 60, 32], [57, 345, 54, 16]]]
, # 28 
[[[5, 374, 385, 59], [8, 312, 391, 31], [430, 127, 19, 326], [51, 127, 379, 63], [51, 190, 40, 77], [187, 225, 212, 95]], [[37, 451, 60, 32], [57, 345, 54, 16]], [[174, 5, 130, 130]]]
, # 29
[[[62, 137, 272, 121], [391, 137, 18, 123], [409, 137, 22, 9], [417, 7, 14, 139], [41, 137, 30, 11], [41, 9, 18, 128], [391, 250, 18, 122], [202, 317, 189, 55], [62, 199, 59, 252], [115, 419, 306, 32]], [[67, 22, 344, 98]], [[445, 25, 28, 38], [15, 28, 22, 27]]]
, # 30
[[[54, 0, 385, 112], [9, 160, 434, 106], [43, 289, 450, 77], [71, 397, 96, 98], [225, 351, 272, 97]], [[26, 449, 30, 24]], [[458, 476, 31, 13]]]
, # 31
[[[56, 9, 1, 306], [47, 286, 324, 1], [337, 75, 1, 342], [123, 204, 316, 1], [414, 253, 1, 244], [7, 382, 254, 1], [244, 339, 1, 154], [182, 7, 1, 141], [51, 86, 195, 1]], [[13, 13, 38, 38]], [[63, 211, 267, 68]]]
, # 32
[[[44, 204, 351, 1], [56, 88, 1, 355], [49, 434, 374, 1], [374, 43, 1, 334], [133, 347, 360, 1], [103, 5, 1, 154], [98, 147, 222, 1], [180, 66, 261, 1], [418, 50, 1, 260]], [[301, 209, 65, 130]], [[377, 71, 38, 128]]]
, # 33
[[[272, 67, 189, 1], [428, 57, 1, 372], [194, 3, 1, 388], [157, 265, 276, 1], [293, 48, 1, 144], [241, 337, 141, 1], [366, 329, 1, 170], [131, 377, 169, 1], [137, 187, 1, 251], [69, 57, 1, 372], [47, 204, 106, 1]], [[299, 77, 120, 114]], [[146, 273, 37, 94]]]
, # 34
[[[65, 114, 370, 1], [7, 205, 444, 1], [439, 197, 1, 234], [72, 425, 375, 1], [74, 249, 1, 182], [60, 258, 321, 1], [372, 254, 1, 135], [70, 111, 1, 103], [114, 151, 382, 1], [423, 5, 1, 64], [199, 54, 236, 1], [86, 44, 1, 83], [78, 50, 51, 1]], [[78, 267, 289, 152]], [[14, 119, 53, 82]]]
, # 35
[[[45, 78, 209, 1], [242, 65, 1, 234], [80, 70, 1, 197], [1, 220, 98, 1], [162, 137, 1, 261], [49, 371, 442, 1], [297, 108, 192, 1], [236, 225, 181, 1]], [[13, 84, 63, 133]], [[381, 376, 104, 109]]]
, # 36
[[[245, 371, 246, 1], [253, 163, 1, 217], [243, 171, 247, 1], [5, 74, 433, 1], [158, 66, 1, 427]], [[381, 376, 104, 109]], [[13, 13, 142, 57]]]
, # 37
[[[163, 9, 1, 252], [71, 78, 294, 1], [5, 225, 110, 1], [4, 330, 409, 1], [296, 119, 1, 282], [81, 388, 275, 1], [398, 10, 1, 251]], [[17, 16, 49, 152]], [[231, 334, 63, 51]]]                
, # 38
[[[224, 390, 267, 1], [226, 319, 1, 82], [218, 325, 201, 1], [407, 81, 1, 253], [107, 84, 309, 1], [8, 139, 233, 1], [298, 71, 1, 130], [115, 192, 196, 1], [61, 121, 1, 136], [53, 249, 307, 1], [353, 131, 1, 126], [106, 235, 1, 209], [83, 441, 338, 1]], [[231, 334, 63, 51]], [[12, 142, 46, 105]]]
, # 39
[[[99, 8, 1, 414], [88, 375, 348, 1], [173, 299, 317, 1], [193, 57, 1, 266], [183, 77, 268, 1], [265, 143, 225, 1], [273, 137, 1, 112], [367, 179, 1, 140], [361, 184, 104, 1], [417, 235, 74, 1]], [[17, 19, 74, 350]], [[422, 242, 61, 51]]]
, # 40
[[[331, 224, 162, 1], [342, 97, 1, 148], [105, 111, 249, 1], [110, 103, 1, 286], [102, 365, 233, 1], [281, 172, 1, 319], [163, 300, 331, 1], [243, 132, 1, 145], [101, 212, 89, 1], [209, 273, 1, 60]], [[422, 242, 61, 51]], [[255, 341, 22, 19]]]
, # 41
[[[0, 0, 118, 497], [118, 397, 376, 100], [383, 7, 111, 390], [102, 7, 281, 136], [102, 143, 77, 95], [92, 327, 151, 76], [209, 313, 102, 15], [295, 321, 56, 50], [329, 173, 22, 198], [209, 173, 120, 32], [209, 205, 23, 78], [148, 265, 84, 28], [255, 263, 23, 50], [295, 198, 38, 81]], [[247, 330, 42, 26]], [[313, 307, 12, 12]]]
, # 42
[[[0, 3, 494, 177], [398, 180, 96, 313], [8, 381, 390, 112], [8, 94, 101, 287], [126, 199, 253, 84], [270, 272, 30, 127], [365, 280, 14, 75], [337, 302, 10, 83], [317, 333, 24, 15], [295, 360, 24, 8], [103, 309, 47, 11], [176, 271, 14, 71], [143, 333, 65, 28], [227, 306, 14, 82], [206, 305, 41, 20], [253, 327, 51, 34]], [[303, 372, 14, 5]], [[243, 363, 25, 16]]]
, # 43
[[[0, 0, 64, 492], [64, 427, 427, 65], [275, 5, 216, 422], [175, 5, 100, 300], [61, 5, 214, 216], [64, 272, 47, 158], [80, 239, 75, 16], [141, 255, 14, 176], [198, 343, 86, 14], [198, 357, 38, 50], [151, 318, 77, 15], [233, 316, 22, 17], [133, 297, 3, 28], [121, 347, 5, 39], [173, 369, 26, 6], [181, 322, 4, 32], [155, 409, 30, 21]], [[243, 363, 25, 16]], [[113, 415, 26, 10]]]
, # 44
[[[7, 269, 102, 230], [7, 5, 45, 264], [52, 5, 319, 172], [321, 3, 171, 494], [91, 472, 230, 25], [248, 375, 73, 122], [180, 149, 164, 56], [103, 375, 106, 36], [187, 411, 22, 49], [107, 449, 50, 32], [147, 306, 187, 16], [198, 342, 11, 64], [198, 342, 103, 17], [99, 352, 102, 49], [99, 322, 26, 30], [144, 219, 21, 96], [73, 197, 85, 52], [159, 227, 127, 12], [197, 265, 136, 14]], [[161, 456, 19, 11]], [[284, 294, 33, 8]]]
, # 45
[[[0, 0, 273, 385], [0, 0, 65, 493], [65, 473, 432, 20], [105, 419, 320, 21], [43, 368, 351, 23], [362, 286, 32, 105], [273, 217, 163, 34], [325, 243, 17, 98], [412, 83, 22, 357], [467, 9, 30, 475], [446, 457, 51, 27], [383, 189, 61, 73], [272, 5, 209, 64], [353, 59, 41, 107], [300, 151, 63, 15], [270, 114, 61, 13], [319, 85, 14, 42], [297, 64, 10, 36], [300, 155, 20, 44]], [[275, 253, 48, 19]], [[275, 72, 9, 39]]]
, # 46
[[[0, 0, 493, 35], [368, 35, 125, 464], [0, 211, 368, 288], [3, 25, 141, 230], [194, 49, 175, 9], [159, 49, 22, 9], [173, 55, 3, 120], [159, 175, 126, 11], [303, 175, 74, 11], [173, 121, 204, 12], [225, 55, 10, 35], [225, 103, 10, 23], [318, 128, 103, 123], [295, 27, 109, 105], [242, 127, 10, 32], [242, 169, 10, 11], [204, 147, 40, 10], [174, 147, 17, 10], [238, 135, 3, 2], [249, 124, 94, 21], [201, 180, 10, 16], [201, 205, 10, 14], [265, 182, 10, 9], [265, 199, 10, 54]], [[245, 67, 40, 43], [290, 37, 2, 10]], [[234, 131, 3, 9], [234, 144, 3, 4]]]
, # 47
[[[9, 9, 86, 488], [373, 9, 121, 486], [83, 9, 290, 57], [91, 467, 290, 24], [321, 317, 60, 174], [295, 59, 99, 128], [87, 49, 61, 167], [84, 333, 97, 153], [212, 107, 57, 18], [255, 125, 14, 48], [175, 158, 80, 15], [175, 84, 13, 74], [175, 82, 148, 11], [238, 162, 23, 123], [131, 233, 210, 76], [143, 191, 68, 25], [251, 40, 63, 44], [272, 293, 13, 72], [235, 397, 103, 14], [207, 308, 10, 133], [207, 437, 85, 6], [235, 341, 14, 66], [308, 222, 4, 25], [308, 168, 4, 42]], [[196, 138, 51, 13]], [[224, 69, 25, 10]]]
, # 48
[[[0, 0, 499, 62], [0, 0, 59, 495], [268, 58, 227, 439], [181, 43, 15, 125], [196, 142, 47, 26], [232, 88, 11, 54], [157, 197, 130, 22], [54, 197, 69, 22], [138, 54, 8, 227], [157, 151, 11, 47], [39, 51, 151, 62], [79, 247, 156, 35], [40, 329, 367, 167], [40, 302, 132, 27], [210, 251, 25, 58], [93, 141, 30, 72]], [[201, 115, 26, 20]], [[65, 130, 6, 37]]]
, # 49
[[[0, 0, 59, 499], [0, 0, 499, 125], [169, 110, 326, 208], [347, 110, 148, 382], [19, 408, 328, 84], [63, 172, 76, 5], [129, 120, 60, 17], [136, 202, 39, 159], [72, 215, 21, 80], [98, 215, 20, 80], [87, 273, 59, 17], [41, 344, 74, 25], [57, 317, 46, 182], [123, 383, 92, 11], [136, 327, 23, 62], [197, 339, 28, 47], [205, 364, 112, 14], [277, 347, 40, 31], [248, 303, 6, 44]], [[93, 129, 32, 10]], [[163, 365, 30, 14]]]
, # 50
[[[0, 0, 129, 499], [113, 433, 386, 62], [406, 3, 88, 449], [99, 5, 316, 92], [235, 89, 95, 290], [151, 326, 10, 146], [155, 326, 53, 19], [199, 345, 9, 65], [199, 398, 175, 12], [359, 346, 10, 57], [359, 265, 17, 79], [355, 125, 20, 132], [361, 299, 6, 58], [151, 153, 22, 173], [194, 275, 54, 28], [170, 205, 42, 40], [190, 86, 56, 72], [113, 72, 48, 44], [305, 54, 35, 85], [392, 93, 39, 74], [393, 418, 40, 41], [97, 409, 46, 55], [365, 256, 6, 47]], [[166, 396, 27, 27]], [[134, 235, 11, 169]]]
, # 51
[[[0, 0, 125, 499], [107, 412, 392, 87], [115, 6, 382, 221], [424, 205, 73, 248], [159, 237, 12, 164], [183, 313, 14, 110], [183, 207, 14, 86], [212, 217, 13, 174], [240, 239, 13, 158], [269, 276, 13, 141], [269, 141, 13, 116], [299, 219, 16, 141], [299, 378, 16, 47], [341, 330, 92, 15], [313, 272, 80, 28], [341, 244, 52, 28]], [[141, 230, 14, 177]], [[323, 231, 12, 38]]]
, # 52
[[[10, 434, 339, 63], [153, 231, 40, 230], [159, 189, 111, 63], [84, 179, 112, 66], [136, 145, 87, 75], [155, 85, 246, 56], [199, 60, 178, 43], [417, 19, 56, 50], [367, 419, 2, 80], [383, 389, 2, 109], [403, 406, 2, 84], [423, 364, 2, 130], [443, 393, 2, 106], [462, 437, 2, 58], [476, 352, 2, 143]], [[307, 395, 29, 38]], [[21, 404, 24, 21]]]
, # 53
[[[3, 445, 489, 46], [125, 376, 70, 65], [257, 376, 70, 65], [72, 298, 303, 77], [142, 233, 184, 70], [107, 176, 40, 36], [111, 153, 4, 33], [134, 153, 4, 36], [77, 39, 96, 92], [91, 117, 70, 41], [97, 17, 56, 27], [409, 137, 89, 319], [425, 82, 6, 55], [390, 59, 67, 27], [401, 47, 40, 28], [269, 122, 36, 31], [211, 112, 148, 15], [263, 109, 46, 15], [305, 27, 39, 36]], [[61, 398, 46, 27]], [[436, 118, 15, 15]]]
, # 54
[[[148, 421, 351, 74], [227, 248, 41, 179], [268, 248, 153, 63], [388, 311, 33, 136], [325, 311, 96, 48], [325, 359, 28, 81], [358, 389, 4, 8], [253, 357, 82, 76], [293, 305, 9, 70], [256, 330, 75, 7], [200, 227, 245, 23], [223, 207, 202, 25], [243, 191, 157, 16], [265, 177, 112, 15], [280, 163, 78, 18], [295, 153, 45, 12], [307, 143, 23, 14], [439, 17, 44, 40], [191, 72, 183, 45], [225, 39, 60, 51], [225, 57, 121, 33], [150, 361, 10, 78], [137, 305, 16, 63], [99, 283, 85, 30], [107, 269, 38, 23], [145, 340, 10, 48], [157, 375, 8, 59], [13, 426, 129, 3], [34, 399, 87, 20], [37, 390, 4, 13], [111, 389, 3, 12], [72, 334, 7, 67], [47, 339, 20, 40], [66, 345, 11, 2], [59, 371, 15, 2]], [[433, 374, 16, 37]], [[189, 389, 28, 21]]]
, # 55
[[[131, 438, 22, 46], [62, 437, 22, 46], [51, 416, 109, 35], [137, 399, 30, 31], [153, 389, 6, 17], [161, 409, 24, 18], [55, 360, 4, 60], [227, 310, 11, 185], [408, 310, 11, 181], [195, 282, 258, 35], [218, 201, 32, 86], [226, 157, 13, 51], [223, 153, 20, 8], [296, 269, 73, 10], [363, 264, 14, 5], [287, 264, 14, 6], [321, 245, 24, 23], [331, 237, 3, 13], [302, 8, 2, 118], [299, 125, 8, 22], [53, 87, 126, 8], [171, 95, 8, 107], [55, 195, 116, 7], [53, 87, 7, 115], [109, 90, 10, 109], [58, 143, 119, 8]], [[181, 471, 40, 14]], [[424, 471, 45, 14]]]
, # 56
[[[357, 108, 18, 386], [318, 277, 101, 36], [279, 299, 177, 35], [264, 324, 211, 18], [286, 234, 168, 21], [305, 213, 130, 24], [321, 191, 88, 22], [341, 247, 60, 36], [353, 160, 27, 47], [311, 142, 118, 19], [327, 121, 86, 24], [223, 79, 18, 413], [87, 188, 148, 13], [87, 161, 20, 39], [50, 121, 96, 46], [71, 105, 51, 40], [179, 38, 114, 52], [201, 24, 65, 40], [235, 161, 38, 9], [264, 137, 9, 33], [255, 128, 37, 13], [265, 122, 19, 15], [2, 447, 395, 46], [180, 248, 3, 200], [155, 271, 4, 177], [126, 246, 3, 202], [109, 307, 2, 143], [80, 259, 2, 192], [43, 322, 2, 137], [23, 209, 2, 247]], [[424, 471, 45, 14]], [[190, 429, 24, 13]]]
, # 57
[[[10, 455, 482, 38], [60, 371, 39, 103], [31, 343, 102, 45], [47, 325, 73, 46], [162, 365, 3, 94], [125, 412, 2, 45], [226, 259, 32, 213], [113, 204, 268, 58], [341, 391, 72, 76], [299, 349, 155, 42], [428, 391, 26, 18], [299, 390, 28, 19], [317, 331, 119, 30], [465, 9, 20, 456], [409, 134, 62, 16], [409, 79, 15, 71], [389, 65, 54, 26], [259, 160, 216, 19], [259, 39, 12, 140], [224, 23, 85, 22], [17, 142, 4, 334], [13, 129, 12, 16], [20, 241, 11, 4], [27, 211, 4, 34], [24, 204, 10, 11], [99, 103, 20, 22], [115, 91, 1, 14], [116, 91, 13, 1], [128, 92, 1, 18], [87, 109, 41, 1], [87, 91, 1, 18], [88, 91, 15, 1], [102, 92, 1, 12], [34, 9, 6, 74], [66, 8, 7, 50], [6, 4, 143, 39], [142, 0, 72, 27]], [[102, 423, 18, 28]], [[332, 399, 5, 46]]]
, # 58
[[[305, 353, 16, 128], [305, 353, 126, 18], [429, 237, 15, 244], [213, 468, 86, 27], [241, 273, 39, 202], [133, 233, 251, 43], [382, 276, 2, 16], [133, 263, 2, 27], [234, 211, 50, 19], [243, 197, 32, 18], [239, 192, 39, 7], [254, 147, 2, 60], [249, 143, 12, 10], [263, 153, 5, 9], [265, 139, 8, 12], [247, 131, 10, 10], [241, 136, 5, 14], [244, 155, 8, 6], [7, 124, 130, 21], [50, 117, 65, 6], [59, 101, 47, 16], [55, 90, 55, 22], [48, 86, 66, 22], [45, 69, 73, 30], [40, 67, 81, 9], [77, 31, 1, 45], [75, 29, 4, 3], [57, 379, 16, 105], [117, 379, 17, 104], [41, 361, 114, 30], [64, 441, 59, 4], [5, 139, 92, 23]], [[328, 376, 50, 15]], [[13, 431, 22, 14]]]
, # 59
[[[70, 292, 423, 201], [23, 239, 30, 30], [17, 339, 10, 9], [54, 405, 3, 4], [84, 284, 20, 7], [121, 284, 19, 7], [131, 216, 9, 68], [95, 218, 9, 67], [90, 141, 53, 80], [34, 141, 109, 11], [28, 157, 22, 17], [97, 105, 29, 29], [144, 144, 11, 87], [227, 197, 231, 80], [273, 150, 185, 127], [322, 52, 136, 225], [305, 128, 153, 149], [303, 52, 31, 17]], [[12, 467, 55, 20]], [[242, 171, 31, 26]]]
, # 60
[[[152, 251, 34, 34], [181, 267, 44, 6], [53, 268, 116, 43], [77, 184, 46, 97], [123, 281, 2, 47], [79, 293, 2, 36], [298, 140, 125, 37], [411, 117, 31, 34], [441, 130, 40, 5], [243, 95, 127, 59], [348, 321, 35, 29], [379, 337, 40, 7], [275, 343, 86, 54], [287, 307, 44, 50], [334, 381, 3, 32], [290, 383, 4, 31], [384, 177, 1, 18], [323, 173, 1, 22], [5, 5, 56, 55], [445, 6, 49, 49], [446, 449, 48, 46], [3, 447, 52, 49]], [[92, 141, 17, 27], [86, 149, 29, 28], [90, 177, 21, 3]], [[431, 121, 23, 6], [374, 327, 5, 4], [175, 259, 3, 3]]]
, # 61
[[[3, 372, 492, 1], [127, 357, 154, 12], [277, 344, 16, 19], [119, 344, 15, 19], [216, 329, 4, 24], [205, 328, 5, 25], [210, 328, 10, 9], [205, 311, 15, 26], [209, 301, 5, 7], [221, 312, 4, 21], [199, 313, 5, 22], [330, 325, 162, 174], [14, 15, 31, 35], [346, 161, 11, 176], [309, 141, 62, 37], [329, 153, 68, 36], [337, 112, 44, 56], [414, 311, 1, 15], [392, 307, 2, 20], [369, 302, 1, 22], [378, 316, 1, 15], [445, 312, 2, 17], [429, 316, 2, 17], [465, 299, 4, 34], [121, 163, 12, 12], [129, 167, 10, 2], [80, 167, 45, 32], [87, 195, 2, 22], [115, 198, 2, 19], [88, 151, 12, 34]], [[444, 58, 29, 83]], [[86, 270, 12, 17]]]
, # 62
[[[237, 185, 1, 233], [62, 183, 315, 28], [62, 183, 10, 116], [130, 351, 14, 148], [62, 296, 159, 23], [179, 314, 24, 134], [99, 473, 230, 21], [232, 401, 258, 97], [19, 360, 91, 118], [6, 106, 73, 31], [43, 62, 28, 46], [177, 104, 18, 87], [337, 7, 66, 91], [251, 75, 222, 60], [279, 227, 204, 158], [466, 247, 33, 7], [299, 366, 7, 59], [160, 179, 4, 2]], [[209, 243, 10, 49]], [[249, 283, 10, 49]]]
, # 63
[[[275, 43, 1, 450], [94, 39, 207, 64], [114, 100, 36, 307], [49, 387, 22, 19], [59, 345, 25, 26], [29, 295, 36, 34], [12, 229, 61, 58], [74, 195, 21, 21], [34, 148, 33, 33], [60, 96, 33, 37], [18, 32, 55, 58], [84, 415, 19, 16], [61, 447, 10, 10], [27, 465, 8, 8], [60, 480, 3, 3], [193, 101, 39, 53], [263, 311, 232, 182], [193, 189, 39, 42], [198, 231, 29, 262], [321, 147, 127, 35], [401, 48, 27, 101], [401, 48, 98, 18], [336, 165, 21, 90], [357, 233, 72, 22], [400, 233, 29, 127]], [[249, 243, 24, 59]], [[282, 284, 23, 17]]]
, # 64
[[[315, 260, 68, 239], [241, 273, 74, 1], [231, 159, 46, 138], [266, 159, 187, 30], [436, 189, 17, 250], [417, 337, 20, 88], [364, 234, 50, 69], [447, 216, 20, 141], [478, 452, 21, 47], [280, 474, 20, 21], [61, 316, 201, 179], [24, 475, 21, 18], [28, 139, 253, 20], [28, 159, 7, 250], [25, 403, 20, 26], [109, 303, 58, 2], [145, 246, 22, 59], [109, 245, 20, 60], [29, 68, 100, 16], [42, 43, 173, 12], [141, 77, 122, 17], [49, 110, 110, 14], [271, 89, 136, 18], [263, 52, 144, 12], [201, 22, 157, 13], [24, 29, 127, 6], [294, 138, 151, 7], [181, 105, 77, 8], [437, 3, 4, 70], [455, 5, 4, 68], [439, 54, 16, 19]], [[282, 278, 23, 97]], [[285, 248, 22, 16]]]
, # 65
[[[95, 197, 1, 169], [3, 359, 488, 137], [85, 173, 367, 28], [370, 195, 31, 92], [269, 281, 176, 34], [426, 233, 64, 18], [247, 50, 28, 107], [305, 77, 149, 26], [35, 35, 150, 95], [164, 24, 5, 14], [85, 24, 79, 5], [79, 0, 6, 29], [23, 117, 15, 6], [23, 59, 4, 64], [13, 59, 14, 4], [13, 63, 5, 97], [5, 155, 13, 5]], [[99, 205, 16, 151]], [[19, 226, 18, 18]]]
, # 66
[[[9, 190, 225, 32], [194, 140, 40, 82], [209, 152, 151, 1], [343, 140, 61, 265], [91, 378, 313, 27], [91, 304, 259, 31], [9, 273, 46, 222], [304, 347, 40, 1], [459, 237, 12, 113], [394, 291, 73, 44], [427, 205, 10, 49], [427, 187, 72, 18], [241, 94, 164, 16], [343, 110, 62, 295], [147, 51, 101, 48], [71, 45, 89, 100]], [[236, 155, 105, 146]], [[271, 107, 31, 31]]]
, # 67
[[[0, 0, 133, 499], [341, 3, 158, 496], [201, 65, 6, 228], [205, 75, 147, 1], [245, 202, 112, 25], [245, 156, 24, 71], [281, 276, 11, 101], [178, 363, 103, 14], [187, 287, 36, 79], [247, 225, 5, 75], [243, 297, 20, 26], [171, 435, 34, 54], [255, 378, 28, 39], [129, 21, 370, 4], [312, 5, 11, 18], [254, 5, 3, 20], [164, 5, 30, 19], [128, 0, 246, 16]], [[273, 79, 35, 97]], [[252, 57, 81, 10]]]
, # 68
[[[373, 0, 117, 89], [426, 45, 67, 204], [199, 145, 237, 90], [108, 7, 1, 290], [93, 283, 363, 50], [447, 393, 45, 98], [257, 332, 94, 100], [351, 327, 72, 44], [128, 435, 100, 60], [0, 378, 133, 121], [0, 2, 29, 376], [20, 0, 404, 35]], [[113, 93, 310, 48]], [[63, 81, 41, 109]]]
, # 69
[[[0, 0, 48, 209], [0, 0, 232, 72], [139, 152, 93, 211], [50, 267, 89, 96], [9, 429, 38, 70], [99, 351, 39, 78], [153, 403, 342, 89], [353, 345, 142, 58], [225, 152, 185, 90], [225, 3, 266, 69], [146, 39, 1, 192]], [[91, 85, 27, 169]], [[181, 85, 27, 53]]]
, # 70
[[[212, 69, 31, 158], [137, 68, 36, 207], [161, 165, 52, 1], [0, 1, 85, 91], [52, 155, 88, 120], [7, 349, 109, 37], [157, 269, 16, 165], [65, 434, 108, 13], [167, 416, 242, 31], [242, 69, 148, 51], [304, 165, 186, 61], [445, 95, 45, 70], [212, 220, 31, 130], [212, 311, 197, 39], [212, 272, 135, 78], [375, 223, 124, 47], [301, 7, 198, 28]], [[117, 18, 138, 43]], [[185, 177, 21, 94]]]
, # 71
[[[125, 215, 21, 131], [72, 315, 74, 31], [72, 281, 17, 34], [49, 265, 40, 16], [49, 186, 20, 79], [69, 186, 24, 19], [80, 205, 13, 26], [80, 215, 52, 16], [85, 146, 63, 19], [85, 111, 14, 54], [57, 99, 42, 12], [57, 68, 16, 31], [73, 68, 80, 11], [139, 79, 14, 36], [133, 114, 15, 38], [141, 115, 12, 8], [86, 158, 1, 38], [0, 0, 99, 71], [47, 9, 78, 27], [0, 67, 26, 85], [171, 79, 22, 60], [182, 130, 62, 21], [244, 101, 19, 50], [227, 89, 36, 12], [227, 59, 13, 30], [193, 59, 47, 14], [171, 69, 30, 15], [294, 41, 91, 14], [371, 55, 14, 64], [321, 105, 50, 14], [321, 84, 11, 21], [248, 74, 84, 10], [248, 55, 7, 19], [255, 55, 24, 6], [271, 61, 8, 8], [271, 63, 28, 6], [293, 41, 6, 22], [360, 131, 90, 13], [435, 144, 15, 62], [435, 206, 32, 11], [457, 217, 10, 27], [405, 231, 52, 13], [405, 190, 8, 41], [367, 179, 46, 11], [367, 179, 11, 50], [378, 221, 13, 8], [383, 221, 8, 30], [352, 243, 31, 8], [352, 166, 7, 77], [359, 166, 20, 4], [370, 155, 9, 15], [324, 155, 46, 6], [324, 127, 9, 34], [333, 127, 42, 11], [413, 393, 20, 77], [334, 393, 99, 20], [334, 413, 17, 42], [351, 438, 27, 17], [365, 438, 13, 43], [365, 461, 59, 20], [369, 341, 13, 40], [382, 372, 29, 9], [401, 303, 10, 69], [309, 303, 92, 14], [309, 272, 17, 45], [276, 272, 50, 14], [276, 286, 19, 74], [295, 341, 74, 19], [162, 333, 54, 18], [199, 304, 17, 47], [199, 304, 50, 19], [235, 323, 14, 62], [207, 375, 28, 10], [207, 375, 12, 36], [154, 397, 65, 14], [154, 369, 13, 28], [167, 369, 13, 6], [162, 337, 18, 38], [252, 80, 1, 16], [351, 115, 1, 15], [355, 247, 1, 58], [322, 283, 34, 1], [425, 427, 74, 18], [388, 479, 9, 20], [459, 461, 6, 14], [446, 461, 19, 4], [446, 465, 5, 16], [451, 471, 14, 10], [245, 329, 38, 1], [128, 338, 39, 1], [245, 409, 10, 48], [255, 448, 37, 9], [282, 429, 10, 19], [269, 429, 13, 7], [262, 409, 7, 27], [249, 409, 13, 16], [18, 363, 31, 14], [42, 377, 7, 27], [42, 395, 45, 9], [75, 371, 12, 24], [75, 371, 44, 9], [108, 380, 11, 71], [72, 442, 36, 9], [72, 432, 9, 10], [45, 432, 36, 9], [45, 441, 8, 31], [15, 463, 38, 9], [15, 363, 16, 100], [96, 445, 1, 47]], [[101, 176, 232, 25]], [[45, 157, 36, 26]]]
, # 72
[[[100, 100, 300, 300], [9, 8, 91, 147], [55, 228, 196, 21], [10, 281, 45, 22], [1, 352, 32, 140], [85, 246, 42, 209], [166, 441, 107, 53], [314, 396, 135, 51], [437, 222, 22, 136], [414, 157, 85, 20], [419, 45, 41, 40], [344, 40, 6, 7], [359, 59, 6, 6], [333, 65, 8, 8], [152, 46, 137, 64]], [[33, 157, 38, 52]], [[107, 77, 37, 18], [309, 131, 48, 19], [137, 154, 46, 19], [126, 283, 61, 22], [179, 297, 170, 31], [330, 244, 27, 63]]]
, # 73
[[[100, 100, 300, 300], [7, 54, 252, 15], [222, 64, 17, 43], [183, 60, 20, 49], [149, 64, 16, 52], [9, 153, 60, 14], [63, 167, 6, 180], [35, 387, 84, 13], [29, 248, 16, 147], [32, 165, 32, 46], [1, 165, 31, 21], [65, 142, 8, 31], [7, 465, 485, 16], [330, 379, 13, 58], [292, 416, 84, 9], [417, 10, 74, 117], [345, 10, 72, 25], [235, 54, 91, 47]], [[15, 74, 72, 51]], [[9, 7, 12, 50], [178, 290, 145, 38], [299, 173, 40, 41], [163, 173, 40, 41]]]
, # 74 
[[[100, 100, 300, 300], [197, 69, 164, 42], [317, 395, 83, 85], [151, 358, 88, 122], [361, 9, 134, 60]], [[264, 19, 89, 40]], [[279, 146, 169, 71]]]
, # 75
[[[100, 100, 300, 300], [0, 0, 495, 101], [0, 29, 400, 462], [395, 227, 74, 12], [399, 134, 58, 7], [423, 86, 68, 30], [446, 255, 53, 66], [378, 233, 48, 43], [429, 291, 34, 30], [383, 381, 75, 8], [451, 345, 7, 36], [426, 345, 25, 6], [413, 363, 29, 6], [413, 311, 5, 58], [418, 311, 55, 15]], [[403, 105, 16, 26]], [[402, 393, 83, 92], [188, 190, 37, 19], [236, 190, 36, 20], [156, 220, 154, 32], [279, 215, 31, 36]]]
, # 76
[[[100, 100, 300, 300], [159, 399, 182, 97], [429, 33, 39, 145], [36, 33, 432, 46], [36, 79, 36, 89]], [[408, 13, 79, 15]], [[12, 395, 82, 92], [162, 141, 36, 127], [294, 143, 35, 126], [262, 337, 6, 6]]]
, # 77
[[[100, 100, 300, 300], [133, 395, 214, 50], [303, 441, 11, 34], [147, 421, 14, 55], [104, 421, 43, 12], [147, 413, 228, 8], [122, 48, 33, 47], [179, 17, 34, 42], [229, 71, 50, 10], [255, 22, 50, 12], [291, 43, 30, 48], [319, 21, 46, 18], [345, 55, 28, 37], [107, 15, 38, 20]], [[23, 25, 67, 454]], [[389, 7, 104, 489], [253, 137, 96, 108], [189, 177, 36, 36], [141, 304, 192, 5]]]
, # 78
[[[100, 100, 300, 300], [343, 45, 19, 112], [289, 5, 20, 76], [225, 22, 21, 80], [32, 27, 166, 59], [41, 85, 4, 68], [21, 149, 48, 24], [255, 439, 98, 60], [173, 391, 41, 74], [48, 417, 112, 76], [27, 358, 86, 18], [27, 376, 6, 86], [21, 456, 16, 17], [8, 295, 59, 28], [371, 381, 64, 20], [427, 252, 64, 91], [399, 216, 53, 18], [381, 179, 79, 13], [381, 138, 48, 17], [451, 100, 46, 57], [376, 32, 4, 53], [442, 10, 49, 58]], [[370, 411, 100, 72]], [[31, 220, 52, 57], [267, 172, 94, 6], [127, 172, 98, 7], [177, 296, 136, 63]]]
, # 79
[[[100, 100, 300, 300], [0, 0, 86, 82], [421, 10, 71, 72], [421, 417, 78, 76], [1, 417, 85, 82], [0, 292, 119, 46], [17, 114, 25, 30], [17, 114, 61, 11], [172, 38, 22, 38], [331, 35, 25, 41], [447, 126, 27, 33], [431, 103, 16, 23], [432, 229, 23, 54], [455, 229, 21, 24], [67, 440, 334, 9], [124, 447, 27, 28], [183, 469, 33, 22], [238, 423, 26, 46], [305, 471, 59, 6], [305, 463, 16, 8], [397, 457, 26, 38]], [[95, 457, 7, 24]], [[21, 366, 66, 23], [153, 376, 21, 17], [117, 376, 17, 19], [150, 395, 3, 3]]]
, # 80
[[[100, 100, 300, 300], [0, 100, 101, 255], [5, 415, 53, 78], [45, 465, 109, 28], [134, 442, 91, 55], [261, 394, 103, 43], [295, 393, 105, 70], [400, 393, 43, 44], [400, 329, 64, 64], [428, 283, 71, 21], [428, 237, 15, 67], [394, 191, 77, 23], [459, 214, 12, 42], [365, 99, 106, 30], [365, 37, 34, 62], [429, 8, 64, 59], [423, 147, 74, 15], [333, 37, 42, 14], [257, 67, 87, 6], [257, 7, 52, 60], [179, 6, 31, 49], [179, 6, 84, 22], [95, 72, 98, 31], [95, 56, 44, 47], [7, 88, 74, 54]], [[64, 408, 63, 50]], [[122, 151, 244, 39], [341, 151, 25, 102], [122, 164, 23, 91], [159, 234, 53, 111], [268, 234, 54, 113], [11, 11, 3, 2], [406, 405, 53, 44]]]
, # 81
[[[100, 100, 300, 300], [87, 46, 104, 55], [367, 33, 57, 68], [234, 7, 95, 50], [414, 131, 85, 58], [389, 241, 78, 52], [416, 325, 78, 74], [329, 452, 126, 12], [329, 441, 8, 11], [233, 452, 96, 23], [110, 434, 93, 11], [110, 434, 61, 40], [49, 455, 122, 19], [29, 400, 40, 55], [0, 99, 87, 56], [89, 400, 12, 34]], [[19, 181, 66, 29]], [[135, 127, 62, 29], [312, 128, 69, 43], [158, 262, 173, 33], [272, 262, 59, 65], [19, 21, 54, 62]]]  
, # 82
[[[106, 10, 24, 96], [10, 106, 72, 24], [34, 154, 72, 24], [82, 154, 24, 72], [10, 202, 96, 24], [106, 178, 48, 24], [130, 178, 24, 48], [106, 34, 48, 48], [154, 58, 24, 24], [178, 10, 48, 24], [202, 10, 24, 96], [154, 106, 24, 48], [130, 130, 48, 24], [178, 154, 96, 24], [202, 106, 24, 24], [226, 34, 24, 24], [250, 34, 24, 24], [250, 82, 24, 72], [274, 82, 48, 24], [298, 10, 24, 168], [322, 106, 48, 24], [346, 82, 24, 48], [346, 34, 72, 24], [394, 34, 24, 96], [418, 106, 24, 96], [442, 58, 24, 72], [442, 10, 48, 24], [466, 154, 24, 24], [418, 202, 72, 24], [466, 202, 24, 48], [418, 274, 48, 24], [394, 250, 48, 24], [394, 298, 48, 24], [346, 154, 48, 24], [346, 154, 24, 144], [154, 202, 240, 24], [466, 322, 24, 48], [346, 346, 96, 24], [322, 274, 24, 24], [298, 250, 24, 24], [322, 322, 48, 24], [298, 346, 24, 24], [442, 394, 48, 24], [466, 418, 24, 48], [418, 442, 48, 24], [442, 466, 24, 24], [370, 466, 24, 24], [298, 442, 48, 48], [370, 418, 24, 24], [394, 370, 24, 48], [274, 394, 96, 24], [202, 370, 72, 24], [250, 274, 24, 120], [154, 250, 120, 24], [130, 250, 24, 48], [130, 322, 24, 72], [154, 370, 24, 24], [274, 298, 24, 24], [10, 250, 24, 48], [58, 250, 72, 24], [82, 274, 24, 48], [58, 298, 24, 72], [34, 346, 72, 24], [34, 322, 24, 144], [106, 394, 24, 24], [82, 394, 24, 96], [130, 418, 24, 48], [178, 418, 24, 72], [178, 418, 72, 24], [226, 442, 48, 24]], [[34, 34, 48, 48]], [[178, 298, 48, 48]]]
, # 83
[[[10, 34, 72, 24], [10, 34, 24, 48], [58, 82, 48, 24], [34, 106, 48, 24], [58, 130, 24, 48], [34, 154, 24, 96], [58, 202, 120, 24], [106, 130, 24, 48], [130, 106, 24, 48], [154, 130, 48, 24], [178, 58, 24, 72], [130, 58, 48, 24], [130, 34, 24, 48], [106, 10, 24, 48], [178, 10, 72, 24], [226, 34, 24, 48], [250, 34, 24, 24], [298, 10, 24, 48], [346, 10, 24, 24], [442, 10, 48, 24], [466, 34, 24, 24], [394, 34, 24, 48], [346, 58, 96, 24], [442, 82, 24, 48], [394, 106, 24, 72], [418, 154, 72, 24], [370, 178, 24, 24], [346, 154, 24, 96], [370, 226, 24, 48], [394, 250, 24, 24], [418, 202, 48, 24], [442, 226, 48, 24], [442, 226, 24, 96], [226, 154, 96, 24], [250, 130, 24, 24], [226, 106, 72, 24], [274, 82, 72, 24], [322, 106, 48, 24], [226, 154, 24, 120], [202, 250, 24, 24], [202, 202, 24, 24], [154, 178, 48, 24], [250, 274, 96, 24], [322, 298, 24, 48], [298, 322, 24, 120], [250, 298, 24, 48], [82, 250, 96, 24], [106, 226, 24, 24], [10, 274, 24, 24], [10, 322, 48, 24], [10, 346, 24, 72], [34, 442, 48, 24], [58, 370, 24, 96], [82, 322, 24, 72], [58, 274, 48, 24], [130, 274, 24, 72], [106, 322, 24, 24], [130, 370, 144, 24], [202, 394, 24, 48], [226, 418, 24, 24], [106, 418, 72, 24], [130, 442, 24, 48], [106, 466, 48, 24], [178, 466, 72, 24], [274, 418, 24, 24], [274, 466, 96, 24], [346, 442, 24, 48], [346, 370, 24, 48], [370, 394, 24, 24], [394, 442, 24, 48], [394, 442, 72, 24], [442, 418, 24, 72], [418, 394, 24, 24], [466, 346, 24, 48], [370, 346, 120, 24], [394, 298, 24, 48], [322, 298, 96, 24]], [[178, 298, 48, 48]], [[274, 202, 48, 48]]]
, # 84
[[[10, 10, 24, 48], [10, 34, 96, 24], [34, 58, 24, 24], [130, 34, 72, 24], [154, 58, 24, 120], [82, 154, 96, 24], [34, 106, 24, 72], [466, 394, 24, 96], [346, 466, 144, 24], [442, 322, 24, 48], [418, 202, 24, 144], [394, 322, 24, 48], [370, 346, 24, 24], [346, 346, 24, 96], [298, 418, 24, 72], [250, 370, 96, 24], [154, 394, 120, 24], [202, 442, 72, 24], [226, 418, 24, 24], [154, 442, 24, 48], [34, 442, 120, 24], [58, 394, 24, 48], [10, 370, 24, 48], [58, 298, 24, 72], [34, 322, 72, 24], [106, 370, 24, 48], [130, 370, 48, 24], [130, 274, 24, 120], [106, 202, 24, 96], [58, 202, 24, 72], [34, 226, 24, 24], [10, 202, 24, 96], [202, 322, 24, 48], [178, 298, 24, 48], [178, 322, 96, 24], [250, 274, 24, 48], [226, 154, 24, 144], [178, 250, 48, 24], [178, 202, 24, 72], [154, 226, 48, 24], [298, 322, 24, 24], [298, 274, 72, 24], [346, 130, 24, 192], [394, 274, 24, 24], [370, 226, 24, 24], [370, 178, 24, 24], [466, 250, 24, 48], [442, 58, 24, 168], [418, 58, 48, 24], [418, 154, 24, 24], [370, 34, 24, 120], [394, 106, 24, 24], [418, 10, 72, 24], [274, 10, 96, 24], [322, 34, 24, 24], [322, 82, 48, 24], [298, 154, 48, 24], [202, 154, 72, 24], [178, 106, 24, 24], [202, 58, 48, 24], [226, 34, 24, 72], [250, 82, 24, 48], [274, 58, 24, 48], [298, 130, 24, 24]], [[274, 202, 48, 48]], [[82, 82, 48, 48], [394, 394, 48, 48]]]
, # 85
[[[466, 346, 24, 144], [322, 346, 168, 24], [346, 370, 24, 24], [346, 442, 24, 48], [274, 466, 216, 24], [226, 346, 72, 24], [226, 322, 24, 144], [274, 298, 24, 48], [298, 298, 48, 24], [298, 250, 24, 48], [274, 226, 24, 48], [322, 226, 24, 48], [346, 250, 144, 24], [466, 226, 24, 96], [370, 298, 72, 24], [370, 226, 24, 96], [418, 82, 24, 144], [442, 58, 24, 48], [466, 130, 24, 72], [466, 10, 24, 24], [394, 10, 48, 24], [370, 34, 48, 24], [370, 34, 24, 72], [322, 82, 72, 24], [322, 34, 24, 48], [202, 58, 120, 24], [274, 10, 24, 24], [226, 34, 24, 24], [394, 178, 24, 24], [322, 130, 96, 24], [346, 178, 24, 24], [298, 154, 48, 24], [226, 178, 96, 24], [226, 202, 24, 48], [202, 250, 48, 48], [178, 274, 24, 72], [82, 322, 120, 24], [10, 322, 48, 24], [178, 370, 48, 24], [130, 418, 96, 24], [106, 466, 96, 24], [34, 466, 48, 24], [58, 442, 24, 24], [34, 418, 72, 24], [10, 370, 144, 24], [130, 346, 24, 24], [34, 274, 120, 24], [130, 226, 24, 72], [82, 226, 96, 24], [154, 202, 48, 24], [34, 34, 24, 120], [34, 154, 144, 24], [178, 178, 24, 24], [58, 178, 24, 24], [178, 106, 24, 48], [154, 106, 48, 24], [154, 10, 24, 72], [178, 10, 24, 24], [130, 34, 24, 24], [58, 34, 48, 24], [202, 82, 24, 24], [250, 82, 24, 72], [274, 106, 24, 24], [226, 130, 24, 24], [106, 202, 24, 24], [10, 226, 48, 24], [10, 202, 24, 48]], [[82, 82, 48, 48]], [[274, 394, 48, 48]]]
, # 86
[[[10, 10, 72, 24], [34, 34, 24, 48], [58, 58, 24, 24], [106, 34, 96, 24], [106, 34, 24, 120], [58, 154, 144, 24], [178, 178, 24, 72], [130, 274, 72, 24], [130, 298, 24, 72], [82, 322, 72, 24], [82, 274, 24, 48], [58, 178, 24, 120], [10, 106, 24, 168], [58, 106, 48, 24], [178, 58, 24, 48], [154, 82, 24, 48], [202, 82, 24, 48], [226, 106, 72, 24], [226, 130, 24, 96], [250, 154, 48, 24], [250, 202, 216, 24], [442, 82, 24, 144], [442, 10, 24, 48], [466, 10, 24, 24], [370, 82, 48, 24], [394, 34, 24, 72], [370, 10, 24, 48], [322, 58, 24, 144], [298, 58, 48, 24], [298, 10, 48, 24], [250, 34, 24, 48], [226, 10, 24, 48], [346, 226, 24, 96], [370, 250, 96, 24], [442, 274, 24, 24], [394, 298, 24, 48], [418, 322, 72, 24], [442, 466, 48, 24], [394, 418, 24, 72], [346, 418, 48, 24], [346, 442, 24, 24], [274, 466, 48, 24], [346, 370, 120, 24], [442, 370, 24, 72], [226, 346, 144, 24], [250, 298, 24, 48], [226, 298, 72, 24], [226, 250, 96, 24], [322, 298, 24, 24], [178, 322, 24, 96], [154, 394, 96, 24], [226, 370, 24, 96], [178, 442, 48, 24], [130, 466, 72, 24], [130, 442, 24, 24], [82, 370, 24, 120], [106, 394, 24, 24], [34, 370, 24, 96], [10, 418, 24, 24], [10, 322, 48, 24], [10, 298, 24, 24], [466, 154, 24, 24]], [[106, 202, 48, 48], [274, 394, 48, 48]], [[370, 130, 48, 48]]]
, # 87
[[[10, 10, 120, 24], [106, 34, 144, 24], [226, 58, 24, 24], [178, 58, 24, 24], [106, 82, 48, 24], [106, 106, 24, 24], [34, 58, 48, 24], [58, 82, 24, 72], [10, 130, 48, 24], [10, 106, 24, 24], [178, 106, 24, 48], [154, 130, 24, 72], [178, 178, 24, 96], [202, 202, 48, 24], [226, 106, 24, 72], [250, 106, 96, 24], [322, 82, 24, 144], [346, 202, 24, 72], [370, 250, 120, 24], [466, 250, 24, 48], [418, 202, 24, 72], [394, 202, 72, 24], [442, 130, 24, 96], [490, 82, 0, 0], [490, 82, 0, 0], [418, 82, 72, 24], [370, 82, 24, 24], [274, 154, 24, 48], [298, 178, 24, 24], [274, 226, 24, 48], [226, 250, 96, 24], [226, 274, 24, 48], [250, 298, 72, 24], [274, 322, 24, 48], [226, 370, 120, 24], [322, 346, 24, 48], [226, 346, 24, 24], [346, 298, 48, 24], [370, 322, 24, 72], [370, 370, 120, 24], [466, 322, 24, 48], [418, 322, 48, 24], [418, 298, 24, 48], [418, 394, 24, 24], [466, 418, 24, 72], [370, 442, 96, 24], [370, 418, 24, 48], [298, 442, 48, 24], [298, 418, 24, 72], [178, 466, 144, 24], [226, 418, 48, 24], [226, 442, 24, 24], [10, 418, 24, 72], [34, 466, 24, 24], [82, 466, 72, 24], [58, 418, 144, 24], [178, 298, 24, 144], [130, 298, 48, 24], [58, 298, 48, 24], [58, 322, 24, 96], [34, 370, 24, 24], [10, 322, 24, 24], [10, 202, 24, 96], [34, 178, 24, 48], [34, 178, 96, 24], [106, 154, 24, 48], [58, 250, 24, 48], [82, 226, 24, 48], [82, 226, 72, 24], [130, 250, 24, 24], [442, 10, 24, 48], [370, 34, 72, 24], [322, 10, 24, 48], [274, 10, 48, 24], [274, 34, 24, 48]], [[370, 130, 48, 48]], [[106, 346, 48, 48]]]
, # 88
[[[10, 10, 24, 24], [58, 34, 72, 24], [106, 58, 120, 24], [202, 34, 24, 48], [154, 10, 24, 24], [34, 58, 48, 24], [34, 82, 24, 72], [58, 130, 24, 24], [82, 106, 24, 96], [106, 178, 24, 72], [34, 250, 144, 24], [58, 226, 24, 216], [10, 178, 24, 48], [34, 178, 24, 24], [34, 298, 72, 24], [34, 346, 24, 24], [10, 394, 24, 48], [10, 466, 24, 24], [58, 466, 48, 24], [82, 418, 72, 24], [130, 442, 120, 24], [178, 370, 24, 72], [226, 394, 24, 48], [250, 394, 72, 24], [298, 370, 24, 48], [226, 346, 48, 24], [250, 274, 24, 72], [274, 322, 24, 24], [178, 322, 24, 24], [130, 298, 96, 24], [202, 274, 24, 48], [154, 226, 168, 24], [298, 250, 24, 48], [298, 274, 168, 24], [442, 274, 24, 120], [394, 370, 48, 24], [394, 322, 24, 48], [370, 322, 48, 24], [442, 418, 24, 48], [418, 442, 24, 24], [346, 394, 72, 24], [346, 370, 24, 48], [322, 298, 24, 48], [370, 418, 24, 48], [274, 442, 120, 24], [250, 34, 216, 24], [442, 58, 24, 120], [394, 154, 48, 24], [322, 58, 24, 24], [250, 58, 24, 72], [130, 106, 120, 24], [130, 106, 24, 48], [154, 178, 48, 24], [178, 154, 24, 72], [178, 154, 72, 24], [226, 178, 72, 24], [274, 106, 24, 48], [298, 130, 48, 24], [322, 106, 24, 96], [346, 154, 24, 96], [394, 178, 24, 96], [442, 202, 24, 48], [466, 226, 24, 24]], [[106, 346, 48, 48]], [[370, 82, 48, 48]]]
, # 89
[[[10, 34, 24, 24], [58, 10, 24, 96], [58, 10, 48, 24], [82, 58, 120, 24], [130, 34, 24, 24], [178, 10, 48, 24], [226, 10, 24, 480], [178, 82, 24, 24], [178, 130, 24, 72], [58, 178, 144, 24], [58, 130, 24, 48], [34, 82, 24, 72], [10, 178, 24, 24], [10, 226, 96, 24], [34, 274, 24, 24], [82, 250, 24, 48], [10, 322, 96, 24], [10, 322, 24, 48], [10, 466, 24, 24], [10, 394, 24, 48], [82, 346, 24, 24], [58, 370, 24, 72], [58, 370, 144, 24], [178, 394, 24, 48], [178, 466, 24, 24], [58, 466, 24, 24], [202, 322, 120, 24], [130, 322, 48, 24], [130, 274, 24, 72], [154, 274, 48, 24], [154, 226, 24, 48], [130, 226, 120, 24], [250, 34, 48, 24], [274, 58, 24, 24], [274, 106, 24, 48], [274, 178, 72, 24], [322, 154, 144, 24], [442, 34, 24, 96], [346, 34, 96, 24], [322, 34, 24, 120], [418, 178, 24, 48], [442, 202, 48, 24], [466, 202, 24, 72], [418, 250, 48, 24], [394, 274, 48, 24], [370, 202, 24, 48], [274, 226, 120, 24], [250, 274, 24, 24], [298, 250, 24, 72], [322, 274, 48, 24], [346, 298, 24, 168], [274, 442, 120, 24], [418, 442, 72, 24], [418, 394, 24, 48], [442, 370, 24, 48], [394, 370, 24, 48], [466, 298, 24, 48], [370, 322, 72, 24]], [[106, 418, 48, 48], [370, 82, 48, 48]], [[106, 106, 48, 48], [274, 370, 48, 48]]]
, # 90
[[[34, 34, 48, 24], [58, 58, 24, 48], [82, 58, 120, 24], [154, 10, 24, 72], [106, 10, 48, 24], [10, 82, 24, 24], [34, 130, 48, 24], [34, 130, 24, 168], [58, 274, 144, 24], [178, 226, 24, 48], [82, 226, 72, 24], [106, 202, 24, 24], [82, 178, 120, 24], [178, 106, 24, 96], [202, 10, 24, 24], [250, 10, 48, 24], [226, 58, 24, 48], [202, 130, 96, 24], [274, 106, 24, 48], [274, 58, 72, 24], [322, 34, 24, 72], [346, 10, 24, 48], [322, 82, 48, 24], [394, 34, 24, 48], [418, 34, 48, 24], [442, 10, 24, 48], [442, 82, 24, 72], [394, 130, 48, 24], [394, 106, 24, 24], [370, 178, 120, 24], [466, 202, 24, 72], [466, 298, 24, 24], [466, 346, 24, 48], [442, 418, 24, 72], [394, 418, 48, 24], [394, 442, 24, 24], [394, 370, 48, 24], [418, 322, 24, 48], [178, 322, 240, 24], [226, 298, 24, 192], [250, 442, 24, 24], [298, 442, 72, 24], [346, 346, 24, 96], [322, 226, 24, 96], [370, 274, 72, 24], [418, 226, 24, 72], [346, 226, 48, 24], [322, 130, 48, 24], [322, 154, 24, 48], [226, 178, 120, 24], [250, 154, 24, 24], [274, 202, 24, 120], [226, 226, 24, 48], [202, 226, 24, 24], [106, 370, 96, 24], [106, 394, 24, 48], [106, 466, 24, 24], [34, 442, 48, 24], [34, 418, 24, 48], [34, 394, 96, 24], [10, 322, 24, 48], [58, 322, 24, 48], [82, 322, 72, 24]], [[274, 370, 48, 48]], [[154, 418, 48, 48]]]
, # 91
[[[106, 34, 24, 96], [10, 106, 72, 24], [10, 154, 24, 48], [58, 154, 168, 24], [202, 130, 48, 24], [154, 106, 24, 24], [154, 10, 24, 72], [202, 10, 24, 96], [250, 10, 48, 24], [250, 58, 24, 48], [274, 82, 24, 120], [298, 58, 24, 48], [322, 34, 24, 48], [346, 34, 120, 24], [370, 82, 120, 24], [346, 106, 24, 48], [322, 130, 24, 72], [346, 178, 24, 48], [370, 202, 24, 48], [370, 106, 24, 24], [418, 106, 24, 96], [394, 154, 24, 24], [442, 130, 24, 24], [466, 178, 24, 72], [418, 226, 72, 24], [418, 226, 24, 120], [394, 322, 72, 24], [442, 274, 24, 24], [250, 178, 24, 72], [154, 202, 120, 24], [106, 178, 24, 72], [82, 226, 24, 48], [58, 202, 24, 24], [10, 226, 24, 72], [34, 250, 24, 24], [58, 298, 24, 168], [10, 418, 24, 72], [10, 370, 24, 24], [34, 322, 24, 24], [106, 370, 24, 120], [130, 370, 120, 24], [226, 418, 24, 72], [274, 370, 24, 48], [274, 442, 24, 48], [274, 442, 72, 24], [322, 394, 24, 72], [370, 370, 24, 96], [394, 394, 72, 24], [442, 418, 24, 48], [418, 442, 24, 24], [466, 370, 24, 24], [418, 370, 24, 24], [322, 346, 48, 24], [202, 322, 144, 24], [322, 298, 48, 24], [346, 274, 48, 24], [298, 226, 48, 24], [298, 250, 24, 24], [274, 298, 24, 24], [250, 274, 24, 24], [82, 274, 144, 24], [202, 226, 24, 72], [106, 322, 24, 48], [154, 250, 24, 96]], [[154, 418, 48, 48]], [[34, 34, 48, 48]]]
, # 92 
[[[10, 316, 38, 33], [125, 408, 84, 35], [268, 254, 48, 28], [266, 66, 69, 70], [320, 185, 51, 20], [170, 250, 55, 37], [210, 118, 38, 37], [118, 359, 39, 45], [13, 405, 34, 54], [261, 282, 90, 73], [119, 35, 88, 94], [355, 439, 75, 38], [116, 163, 95, 59], [380, 208, 44, 97], [170, 324, 61, 54], [24, 188, 47, 51], [418, 107, 24, 44], [23, 256, 21, 25], [275, 390, 53, 30], [356, 333, 42, 38]], [[66, 101, 25, 77]], [[48, 427, 53, 26]]]
, # 93
[[[206, 156, 68, 33], [358, 110, 89, 80], [274, 166, 37, 99], [149, 100, 50, 89], [19, 73, 42, 37], [277, 372, 36, 65], [221, 199, 45, 30], [397, 326, 57, 50], [359, 417, 97, 53], [82, 345, 35, 40], [449, 168, 23, 63], [61, 59, 83, 79], [177, 335, 92, 36], [245, 48, 57, 45], [74, 175, 70, 47], [424, 393, 20, 24], [177, 411, 72, 60], [44, 238, 58, 64], [211, 249, 28, 64], [353, 258, 44, 54]], [[104, 401, 44, 60]], [[105, 258, 78, 76]]]
, # 94
[[[372, 331, 87, 99], [232, 89, 63, 49], [433, 52, 45, 85], [286, 216, 63, 48], [284, 13, 83, 50], [213, 406, 88, 56], [54, 76, 71, 98], [290, 301, 46, 57], [379, 265, 79, 41], [119, 403, 68, 50], [228, 29, 49, 58], [147, 213, 95, 32], [185, 340, 37, 58], [28, 136, 23, 84], [101, 179, 76, 26], [389, 134, 44, 37], [57, 179, 24, 47], [313, 67, 66, 70], [252, 156, 33, 21], [417, 206, 45, 37]], [[134, 70, 26, 72]], [[25, 311, 63, 72]]]
, # 95
[[[285, 84, 80, 48], [20, 89, 88, 64], [371, 183, 65, 38], [376, 270, 48, 27], [283, 25, 71, 32], [195, 201, 91, 30], [91, 14, 21, 65], [214, 68, 23, 38], [452, 69, 24, 79], [460, 216, 30, 32], [147, 48, 67, 81], [163, 224, 26, 56], [156, 129, 74, 61], [299, 142, 35, 83], [220, 390, 90, 46], [340, 345, 37, 68], [460, 390, 20, 62], [42, 388, 96, 29], [380, 315, 48, 56], [385, 130, 62, 33]], [[232, 283, 22, 27]], [[198, 302, 33, 46]]]
, # 96
[[[134, 245, 27, 37], [251, 226, 96, 30], [242, 113, 59, 83], [11, 106, 74, 76], [394, 130, 69, 100], [334, 354, 99, 23], [217, 43, 63, 36], [258, 291, 31, 81], [72, 286, 33, 100], [286, 387, 94, 38], [140, 26, 38, 59], [311, 273, 54, 70], [393, 252, 21, 88], [291, 57, 54, 48], [157, 381, 68, 30], [392, 400, 98, 58], [429, 33, 48, 46], [136, 412, 70, 29], [139, 161, 88, 33], [22, 275, 27, 93]], [[225, 405, 61, 80]], [[239, 10, 29, 27]]]
, # 97
[[[364, 114, 55, 57], [135, 102, 67, 87], [317, 344, 92, 72], [100, 409, 100, 74], [357, 287, 24, 25], [43, 387, 25, 99], [396, 19, 88, 94], [236, 283, 47, 91], [289, 16, 96, 64], [80, 295, 42, 87], [102, 69, 46, 25], [335, 218, 38, 29], [21, 297, 35, 36], [277, 139, 33, 44], [275, 426, 31, 51], [64, 19, 26, 35], [206, 129, 45, 82], [425, 277, 35, 97], [204, 380, 47, 62], [424, 187, 49, 77]], [[248, 27, 38, 35]], [[29, 171, 96, 86]]]
, # 98
[[[84, 399, 20, 65], [355, 64, 65, 32], [286, 340, 79, 46], [10, 340, 51, 54], [177, 103, 55, 55], [198, 219, 29, 63], [333, 156, 86, 35], [464, 328, 25, 38], [164, 293, 22, 64], [266, 133, 47, 48], [362, 444, 24, 22], [36, 304, 22, 31], [386, 341, 32, 100], [107, 412, 42, 40], [10, 408, 59, 66], [211, 16, 61, 58], [289, 26, 37, 92], [127, 218, 21, 89], [389, 239, 26, 49], [191, 379, 70, 54]], [[48, 117, 21, 32]], [[233, 228, 27, 69]]]
, # 99
[[[22, 157, 74, 81], [317, 182, 54, 50], [183, 228, 47, 89], [420, 454, 58, 34], [200, 89, 92, 28], [447, 30, 43, 97], [370, 416, 71, 21], [321, 10, 80, 31], [22, 305, 63, 54], [229, 50, 77, 38], [72, 70, 57, 26], [192, 333, 23, 98], [320, 449, 24, 32], [428, 362, 22, 44], [45, 419, 49, 58], [269, 277, 28, 26], [371, 146, 25, 92], [242, 338, 43, 43], [28, 22, 27, 51], [155, 461, 53, 24]], [[226, 405, 91, 56]], [[125, 13, 38, 37]]]
, # 100
[[[171, 22, 97, 88], [326, 373, 91, 61], [36, 141, 98, 26], [227, 210, 90, 35], [458, 433, 22, 38], [360, 50, 99, 26], [156, 144, 34, 90], [97, 229, 22, 39], [345, 183, 98, 47], [422, 250, 27, 30], [181, 322, 21, 87], [52, 347, 63, 40], [285, 415, 39, 67], [175, 431, 48, 52], [231, 342, 78, 48], [230, 300, 30, 33], [418, 392, 41, 22], [10, 187, 84, 52], [28, 46, 71, 69], [25, 257, 65, 59]], [[396, 286, 57, 59]], [[458, 228, 28, 41]]]
, # 101
[[[229, 59, 74, 60], [61, 337, 95, 45], [51, 238, 36, 66], [276, 224, 39, 26], [30, 429, 55, 47], [26, 26, 97, 66], [347, 15, 88, 26], [338, 235, 100, 75], [371, 56, 43, 21], [206, 167, 75, 55], [138, 42, 62, 100], [362, 118, 68, 61], [237, 390, 34, 26], [62, 133, 56, 34], [100, 180, 74, 71], [134, 270, 39, 60], [89, 413, 43, 39], [181, 249, 73, 26], [237, 314, 59, 24], [346, 327, 20, 91]], [[397, 364, 46, 86]], [[292, 174, 52, 47]]]
, # 102
[[[215, 144, 177, 16], [359, 160, 33, 281], [160, 278, 76, 60], [107, 204, 177, 29], [7, 55, 192, 22], [135, 5, 6, 294], [249, 114, 43, 21], [51, 332, 393, 14], [409, 8, 14, 212], [216, 404, 82, 42], [168, 418, 156, 6], [175, 371, 16, 93]], [[302, 201, 23, 122], [22, 473, 57, 9], [83, 16, 26, 32]], [[431, 24, 44, 42]]]
, # 103
[[[334, 8, 24, 441], [373, 126, 78, 151], [250, 395, 220, 40], [262, 326, 20, 141], [299, 119, 11, 248], [180, 119, 130, 41], [166, 140, 16, 281], [140, 372, 114, 31], [73, 328, 36, 168], [90, 204, 78, 36], [44, 90, 41, 18], [144, 19, 20, 43], [40, 360, 45, 14], [4, 366, 26, 14]], [[430, 24, 43, 42], [24, 440, 27, 22]], [[236, 233, 36, 49]]]
, # 104
[[[334, 8, 24, 441], [373, 126, 78, 151], [250, 395, 220, 40], [262, 326, 20, 141], [299, 119, 11, 248], [180, 119, 130, 41], [166, 140, 16, 281], [140, 372, 114, 31], [73, 328, 36, 168], [90, 204, 78, 36], [44, 90, 41, 18], [144, 19, 20, 43], [40, 360, 45, 14], [4, 366, 26, 14], [31, 211, 8, 247]], [[233, 233, 40, 47]], [[436, 21, 46, 36]]]
, # 105
[[[378, 5, 25, 238], [441, 217, 39, 87], [323, 282, 80, 85], [259, 223, 133, 38], [240, 246, 42, 174], [121, 9, 34, 194], [75, 82, 18, 412], [40, 53, 5, 255], [356, 239, 2, 109], [252, 348, 104, 2]], [[428, 17, 57, 54], [21, 409, 45, 51]], [[182, 75, 30, 31], [304, 113, 7, 229], [285, 98, 35, 30]]]
, # 106
[[[231, 8, 36, 435], [190, 461, 122, 1], [343, 3, 56, 29], [386, 17, 49, 192], [368, 201, 40, 126], [340, 312, 42, 120], [295, 428, 64, 39], [439, 413, 55, 82], [143, 289, 50, 175], [60, 274, 99, 32], [66, 155, 23, 128], [69, 144, 163, 19], [181, 130, 56, 67], [137, 156, 50, 24], [60, 47, 31, 11], [31, 435, 18, 64], [44, 428, 43, 11]], [[48, 28, 136, 6], [321, 264, 40, 40]], [[117, 194, 24, 24], [464, 35, 16, 25]]]
, # 107
[[[78, 7, 16, 424], [89, 265, 364, 22], [320, 359, 175, 27], [233, 316, 101, 23], [167, 357, 115, 32], [93, 418, 315, 35], [163, 371, 171, 6]], [[99, 23, 383, 236]], [[14, 18, 52, 55]]]
, # 108
[[[75, 9, 50, 425], [125, 390, 299, 44], [360, 76, 64, 314], [193, 76, 167, 68], [193, 144, 70, 175], [263, 239, 50, 80]], [[62, 444, 32, 35]], [[256, 139, 115, 127]]]
, # 109
[[[302, 248, 4, 46], [306, 285, 65, 9], [369, 249, 6, 45], [237, 197, 163, 44], [137, 298, 42, 104], [65, 153, 113, 37], [293, 378, 147, 31], [417, 441, 6, 53], [373, 431, 50, 10], [173, 387, 321, 3], [376, 62, 36, 82], [233, 79, 81, 30], [88, 43, 33, 69], [85, 130, 123, 225]], [[312, 259, 51, 11]], [[400, 445, 14, 42]]]
, # 110
[[[76, 406, 421, 5], [5, 231, 88, 90], [75, 153, 90, 95], [156, 78, 80, 88], [223, 48, 178, 42], [189, 362, 58, 46], [235, 306, 79, 64], [280, 249, 72, 81], [334, 173, 68, 86], [380, 35, 88, 35], [438, 54, 16, 307]], [[460, 415, 23, 69]], [[21, 194, 31, 28]]]
, # 111
[[[69, 51, 19, 381], [88, 403, 323, 29], [404, 44, 33, 397], [145, 100, 217, 11], [351, 102, 41, 133], [127, 101, 45, 242]], [[460, 415, 23, 69], [123, 454, 50, 8], [36, 306, 23, 36]], [[225, 225, 50, 50]]]
, # 112
[[[196, 212, 13, 90], [209, 292, 97, 10], [294, 166, 12, 126], [153, 166, 141, 14], [153, 219, 13, 125], [166, 335, 186, 9], [341, 241, 11, 94], [341, 241, 57, 8], [386, 249, 12, 147], [109, 385, 277, 11], [109, 117, 11, 268], [120, 117, 232, 17], [341, 134, 11, 63], [388, 68, 10, 129], [60, 68, 328, 13], [60, 81, 15, 370], [75, 434, 154, 17], [303, 434, 146, 16], [438, 66, 11, 384], [240, 130, 10, 39], [392, 137, 52, 9], [303, 390, 13, 52]], [[225, 225, 50, 50]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]]]
, # 113
[[[53, 429, 101, 18], [53, 45, 16, 402], [69, 45, 385, 16], [441, 61, 13, 388], [325, 429, 116, 20], [104, 384, 340, 11], [61, 330, 230, 11], [291, 201, 14, 140], [387, 329, 58, 11], [302, 251, 103, 16], [351, 259, 12, 42], [340, 204, 103, 12], [179, 201, 116, 11], [179, 212, 13, 77], [232, 104, 8, 99], [240, 104, 160, 14], [396, 154, 13, 55], [274, 154, 122, 14], [116, 106, 14, 104], [165, 59, 16, 105], [116, 202, 14, 85], [123, 248, 66, 11]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]], [[225, 225, 50, 50]]]
, # 114
[[[50, 46, 135, 10], [50, 56, 9, 398], [59, 446, 396, 8], [444, 47, 11, 399], [243, 46, 212, 11], [169, 80, 248, 10], [87, 80, 51, 7], [87, 87, 7, 139], [87, 269, 7, 144], [87, 405, 335, 8], [409, 80, 10, 297], [116, 105, 274, 8], [116, 113, 8, 268], [124, 373, 80, 8], [259, 373, 132, 9], [383, 105, 8, 277], [153, 345, 170, 6], [357, 227, 6, 124], [357, 132, 6, 72], [152, 133, 187, 7], [152, 140, 9, 183], [180, 245, 7, 55], [209, 293, 92, 7], [289, 179, 12, 93], [182, 179, 107, 9]], [[225, 225, 50, 50]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]]]
, # 115
[[[50, 47, 399, 20], [427, 67, 22, 381], [248, 429, 179, 19], [50, 431, 119, 17], [50, 54, 18, 394], [106, 371, 272, 14], [189, 290, 123, 15], [299, 194, 13, 111], [257, 194, 42, 17], [187, 192, 37, 19], [187, 192, 15, 113], [63, 289, 93, 15], [309, 291, 89, 14], [356, 217, 74, 10], [61, 208, 93, 18], [135, 126, 75, 67], [272, 104, 113, 51]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]], [[225, 225, 50, 50]]]
, # 116
[[[215, 197, 6, 102], [278, 197, 6, 102], [51, 49, 399, 148], [60, 193, 11, 245], [71, 425, 369, 13], [428, 226, 12, 199], [278, 275, 6, 112], [130, 381, 154, 6], [130, 251, 6, 130], [284, 381, 113, 6], [326, 252, 102, 7]], [[225, 225, 50, 50]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]]]
, # 117
[[[437, 48, 11, 170], [438, 290, 10, 157], [351, 290, 97, 11], [278, 188, 11, 170], [164, 348, 125, 10], [164, 348, 6, 65], [170, 407, 230, 6], [193, 378, 170, 9], [351, 297, 12, 81], [399, 334, 7, 79], [110, 446, 338, 5], [110, 148, 10, 303], [51, 49, 10, 401], [61, 49, 326, 12], [198, 181, 249, 11], [198, 192, 11, 110], [163, 104, 237, 10]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]], [[225, 225, 50, 50]]]
, # 118
[[[440, 47, 11, 405], [49, 47, 391, 11], [49, 111, 10, 340], [59, 440, 389, 11], [202, 187, 5, 143], [202, 187, 117, 11], [310, 198, 9, 121], [247, 309, 63, 10], [68, 266, 113, 9], [174, 98, 73, 70]], [[225, 225, 50, 50]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]]]
, # 119
[[[50, 52, 12, 94], [115, 67, 100, 8], [167, 107, 5, 97], [83, 142, 132, 8], [93, 250, 7, 125], [64, 276, 115, 10], [122, 193, 12, 88], [94, 132, 10, 76], [253, 99, 62, 14], [398, 71, 19, 171], [262, 142, 142, 13], [149, 85, 197, 12], [420, 252, 18, 164], [338, 139, 15, 150], [287, 267, 157, 9], [359, 390, 57, 7], [203, 331, 138, 14], [134, 315, 10, 128], [66, 405, 190, 9], [219, 363, 10, 80], [201, 387, 140, 8], [359, 345, 9, 87]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]], [[225, 225, 50, 50]]]
, # 120
[[[215, 164, 7, 144], [173, 287, 155, 7], [303, 73, 10, 270], [89, 84, 291, 12], [109, 63, 14, 213], [167, 166, 87, 4], [49, 252, 83, 9], [62, 238, 14, 204], [51, 413, 368, 9], [143, 343, 7, 102], [109, 350, 139, 14], [387, 193, 57, 4], [396, 170, 10, 256]], [[225, 225, 50, 50]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]]]
, # 121
[[[281, 276, 4, 73], [285, 344, 45, 5], [325, 276, 5, 68], [304, 276, 21, 4], [281, 276, 11, 6], [175, 229, 65, 5], [175, 176, 5, 53], [180, 176, 62, 5], [237, 181, 5, 29]], [[20, 20, 460, 20], [20, 20, 20, 460], [460, 20, 20, 460], [20, 460, 460, 20]], [[296, 322, 18, 14]]]
, # 122
[[[158, 229, 100, 4], [158, 188, 3, 45], [161, 188, 21, 3], [158, 142, 3, 46], [159, 142, 63, 4], [219, 146, 3, 46], [200, 189, 57, 3], [254, 189, 3, 25]], [[299, 308, 19, 29]], [[170, 156, 7, 12]]]
, # 123
[[[179, 319, 152, 3], [179, 322, 3, 123], [182, 442, 55, 3], [256, 442, 79, 3], [330, 319, 5, 126], [205, 408, 126, 3], [181, 354, 119, 3]], [[191, 336, 9, 10]], [[245, 388, 16, 17]]]
, # 124
[[[7, 241, 165, 2], [168, 243, 4, 49], [168, 289, 36, 3], [224, 289, 31, 3], [251, 210, 4, 82], [168, 210, 83, 3], [168, 213, 4, 12], [172, 253, 55, 3], [239, 253, 16, 3], [253, 224, 241, 2], [416, 212, 62, 4], [473, 162, 5, 50], [415, 162, 58, 3], [415, 165, 4, 24], [415, 199, 3, 17], [92, 331, 5, 57], [42, 385, 50, 3], [42, 355, 4, 30], [43, 331, 3, 8], [46, 331, 50, 4]], [[68, 352, 14, 13]], [[427, 176, 29, 4]]]
, # 125
[[[412, 146, 68, 7], [474, 153, 6, 59], [410, 206, 64, 6], [410, 176, 4, 30], [408, 146, 5, 15], [421, 127, 5, 20], [421, 94, 4, 16], [302, 94, 123, 4], [302, 98, 3, 100], [305, 194, 108, 4], [77, 163, 226, 2], [66, 158, 15, 15]], [[424, 172, 40, 8]], [[224, 387, 12, 13]]]
, # 126
[[[81, 252, 84, 3], [161, 176, 4, 79], [77, 176, 84, 3], [77, 179, 3, 43], [77, 235, 4, 20], [263, 458, 99, 3], [263, 376, 3, 82], [266, 376, 97, 4], [360, 380, 3, 51], [361, 446, 4, 15], [353, 129, 85, 2], [434, 75, 4, 54], [354, 75, 80, 3], [354, 78, 3, 29]], [[379, 17, 98, 13]], [[142, 190, 11, 11]]]
, # 127
[[[380, 194, 3, 106], [292, 297, 88, 3], [292, 190, 3, 107], [295, 190, 33, 4], [341, 193, 42, 4], [261, 153, 142, 5], [399, 158, 4, 91], [399, 284, 4, 39], [263, 320, 140, 3], [261, 157, 4, 166], [245, 108, 177, 4], [418, 58, 4, 54], [345, 58, 73, 4], [345, 62, 3, 29], [245, 47, 4, 63], [249, 47, 56, 4], [301, 51, 4, 35]], [[258, 62, 28, 14], [381, 68, 24, 15]], [[325, 230, 39, 37]]]
, # 128
[[[273, 281, 4, 45], [272, 342, 4, 53], [207, 392, 69, 3], [207, 309, 3, 83], [207, 253, 3, 34], [207, 253, 69, 3], [167, 267, 42, 2], [167, 269, 3, 72], [170, 338, 40, 3], [273, 255, 3, 15], [277, 308, 30, 3], [304, 311, 3, 115], [166, 423, 138, 3], [166, 357, 3, 66], [109, 304, 59, 3], [109, 307, 3, 77], [112, 381, 57, 3]], [[180, 285, 14, 20]], [[142, 313, 13, 11]]]
, # 129
[[[104, 294, 92, 3], [193, 297, 3, 57], [102, 350, 91, 4], [102, 313, 3, 37], [74, 336, 29, 3], [74, 256, 3, 83], [77, 256, 68, 2], [142, 258, 3, 13], [142, 284, 3, 11], [172, 214, 2, 82], [172, 170, 2, 26], [124, 170, 48, 3], [124, 173, 3, 84], [173, 185, 120, 2], [290, 187, 3, 38], [227, 222, 63, 3], [172, 221, 30, 3], [246, 225, 3, 86], [195, 309, 54, 2]], [[117, 261, 12, 22]], [[202, 280, 14, 20]]]
, # 130
[[[16, 14, 5, 48], [21, 14, 41, 5], [56, 19, 6, 43], [42, 57, 14, 5], [18, 57, 15, 5]], [[458, 465, 10, 11]], [[37, 26, 11, 11]]]
, # 131
[[[90, 10, 160, 320], [90, 410, 320, 80], [330, 90, 80, 320]], [[12, 412, 76, 76]], [[412, 412, 76, 76]]]
, # 132
[[[250, 330, 160, 160], [90, 170, 80, 240], [170, 170, 320, 80], [90, 90, 160, 80], [330, 10, 80, 80]], [[412, 412, 76, 76]], [[412, 12, 76, 76]]]
, # 133
[[[250, 90, 160, 240], [90, 330, 240, 160], [90, 90, 80, 160]], [[332, 332, 76, 156]], [[12, 412, 76, 76]]]
, # 134
[[[90, 330, 80, 160], [10, 170, 400, 80], [250, 90, 80, 320], [410, 330, 80, 80]], [[412, 412, 76, 76]], [[12, 12, 236, 156]]]
, # 135
[[[10, 170, 400, 80], [330, 250, 80, 160], [170, 330, 80, 160], [90, 330, 80, 80]], [[92, 12, 236, 156]], [[92, 412, 76, 76]]]
, # 136
[[[10, 330, 240, 80], [10, 170, 240, 80], [330, 90, 80, 400], [170, 90, 80, 80]], [[12, 412, 76, 76], [12, 252, 76, 76]], [[12, 12, 76, 156], [412, 412, 76, 76]]]
, # 137
[[[10, 170, 240, 80], [330, 90, 80, 400], [90, 10, 160, 80], [90, 330, 240, 80]], [[12, 12, 76, 156], [412, 412, 76, 76]], [[252, 412, 76, 76]]]
, # 138
[[[90, 330, 400, 80], [90, 90, 80, 320], [170, 90, 240, 80], [250, 170, 160, 80]], [[412, 412, 76, 76]], [[172, 172, 76, 76]]]
, # 139
[[[90, 250, 400, 80], [90, 90, 80, 320], [90, 90, 320, 80], [250, 410, 80, 80], [410, 330, 80, 80]], [[172, 172, 76, 76]], [[412, 412, 76, 76]]]
, # 140
[[[330, 90, 80, 400], [90, 90, 240, 80], [90, 250, 160, 160]], [[252, 172, 76, 76]], [[12, 412, 76, 76]]]
, # 141
[[[5, 391, 459, 8], [112, 424, 8, 67], [112, 424, 136, 11], [419, 399, 7, 71], [154, 460, 265, 10], [66, 307, 426, 11], [66, 58, 10, 249], [148, 9, 14, 243], [242, 58, 12, 259], [336, 8, 13, 263], [415, 62, 11, 256]], [[256, 428, 138, 16]], [[437, 265, 38, 19]]]
, # 142
[[[267, 2, 152, 469], [65, 24, 147, 473]], [[431, 18, 51, 15]], [[16, 474, 42, 11]]]
, # 143
[[[7, 31, 467, 424]], [[16, 461, 44, 22]], [[14, 14, 11, 15]]]
, # 144
[[[29, 9, 9, 461], [38, 461, 425, 9], [454, 33, 9, 428], [67, 33, 387, 10], [67, 43, 10, 393], [77, 427, 353, 9], [417, 69, 13, 358], [108, 69, 309, 10], [108, 79, 12, 309], [120, 379, 263, 9], [373, 107, 10, 272], [157, 107, 216, 10], [157, 117, 11, 220], [168, 327, 173, 10], [333, 150, 10, 187], [204, 150, 129, 12], [204, 162, 12, 128], [216, 276, 85, 14], [291, 189, 10, 87]], [[19, 474, 25, 11]], [[237, 212, 45, 58]]]
, # 145
[[[300, 183, 6, 108], [191, 183, 109, 8], [191, 191, 10, 115], [201, 299, 115, 7], [235, 396, 8, 50], [138, 380, 134, 6], [133, 275, 5, 111], [76, 433, 174, 5], [76, 272, 5, 161], [206, 386, 4, 33], [99, 413, 107, 6], [77, 397, 120, 7], [120, 298, 7, 102], [126, 98, 17, 186], [59, 42, 35, 233], [94, 42, 366, 14], [445, 56, 15, 196], [338, 239, 107, 13], [338, 103, 14, 136], [134, 103, 218, 21], [131, 74, 6, 30], [427, 81, 0, 0], [129, 72, 298, 9], [418, 81, 9, 138], [397, 96, 4, 144], [365, 78, 4, 138], [369, 213, 15, 3], [377, 143, 24, 20], [353, 393, 69, 53]], [[235, 209, 50, 64]], [[136, 79, 54, 30]]]
, # 146
[[[90, 113, 370, 10], [448, 51, 12, 72], [123, 51, 325, 12], [86, 6, 12, 117], [24, 118, 451, 359], [5, 31, 73, 78]], [[232, 69, 212, 37]], [[10, 10, 13, 21]]]
, # 147
[[[47, 6, 15, 50], [6, 77, 139, 8], [94, 37, 51, 48], [180, 3, 27, 184], [40, 171, 167, 16], [40, 115, 12, 56], [52, 115, 58, 7], [136, 83, 9, 67], [73, 144, 63, 6], [3, 216, 248, 7], [5, 270, 310, 6], [280, 9, 6, 239], [38, 244, 248, 4], [346, 8, 10, 451], [300, 273, 6, 92], [180, 407, 174, 5], [180, 300, 6, 107], [186, 300, 89, 9], [218, 359, 88, 6], [107, 272, 7, 136], [46, 456, 310, 5], [46, 311, 6, 145], [83, 429, 241, 8], [236, 55, 9, 155], [387, 438, 109, 5], [352, 328, 112, 8], [368, 214, 130, 6], [349, 115, 124, 8], [370, 45, 125, 8]], [[12, 11, 14, 24]], [[458, 11, 31, 33]]]
, # 148
[[[246, 5, 208, 318], [46, 169, 189, 326], [441, 321, 8, 143], [423, 366, 6, 132], [343, 366, 83, 4], [308, 313, 5, 160], [309, 392, 89, 8], [344, 431, 81, 5], [310, 467, 92, 6], [286, 350, 9, 145], [252, 313, 5, 147], [82, 139, 169, 7], [46, 40, 7, 132], [53, 40, 170, 9], [82, 78, 6, 66], [216, 45, 7, 78], [114, 116, 102, 7], [86, 78, 102, 6], [181, 84, 7, 17], [114, 100, 7, 17], [137, 96, 30, 10]], [[458, 11, 31, 33]], [[13, 460, 32, 28]]]
, # 149
[[[51, 35, 11, 463], [118, 6, 10, 457], [187, 45, 13, 454], [244, 5, 12, 450], [298, 42, 15, 452], [350, 7, 12, 455], [415, 40, 14, 455]], [[13, 460, 32, 28]], [[463, 472, 26, 17]]]
, # 150
[[[47, 423, 447, 36], [7, 225, 439, 161], [280, 2, 213, 181], [3, 198, 277, 43], [246, 130, 34, 53], [7, 8, 225, 195], [228, 101, 40, 17], [245, 5, 43, 83], [223, 7, 31, 16]], [[463, 472, 16, 16]], [[215, 11, 48, 66]]]
, # The End
 ]


with open(__file__, 'r', encoding='utf-8') as f:
    lines = f.readlines()

def save_progres():
    lines[0] = f"record, hard_record_int = {str(record)}, {str(hard_record_int)}\n"
    with open(__file__, 'w', encoding='utf-8') as f:
        f.writelines(lines)

# strs1 = [
# ['',''],
# [''],
# [],
# ]

mysha=Knopka2(10,10,1,1,(0,0,0))
def game(lvl1=[[12,12,12,12],[23,23,23,23],[43,43,43,43]],is_start=False):
    start = is_start
    knopky1 = [[Knopka2(0,0,10,500), Knopka2(0, 0, 500, 10), Knopka2(490, 0, 10, 500), Knopka2(0, 490, 500, 10)],[],[]]
    for i in lvl1[0]:
        stina = Knopka2(i[0],i[1],i[2],i[3],(0,0,0))
        knopky1[0].append(stina)
    for i in lvl1[1]:
        stina = Knopka2(i[0],i[1],i[2],i[3],(80,250,80))
        knopky1[1].append(stina)
    for i in lvl1[2]:
        stina = Knopka2(i[0],i[1],i[2],i[3],(250,80,80))
        knopky1[2].append(stina)
    lvl_work = True
    while lvl_work == True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
        window.fill(COLOR)
        old_position = Vector2(mysha.x, mysha.y)
        mysha.x, mysha.y = pygame.mouse.get_pos()
        new_position = Vector2(mysha.x, mysha.y)
        movement_line = (old_position, new_position)
        for i in knopky1[0]:
            i.f()
            if pygame.Rect(i.x, i.y, i.x_p, i.y_p).clipline(movement_line) or start == True:
                start = False
                a = True
                exit_level_rect = Knopka2(0, 0, 31, 9, (200, 50, 50))
                exit_level_text = Info(0, 0, 15,(255, 255, 255), 'Вийти')
                while a == True:
                    for event in pygame.event.get():
                        if event.type == pygame.QUIT:
                            pygame.quit()
                            sys.exit()
                    window.fill(COLOR)
                    exit_level_rect.f()
                    exit_level_text.f()
                    for i in knopky1[1]:
                        i.f()
                        mysha.x, mysha.y = pygame.mouse.get_pos()
                        if mysha.g(i):
                            a = False
                            old_position = Vector2(mysha.x, mysha.y )
                            mysha.x, mysha.y = pygame.mouse.get_pos()
                            new_position = Vector2(mysha.x, mysha.y )
                            movement_line = (old_position, new_position)
                        elif mysha.g(exit_level_rect):
                            confirm_yes = Knopka(100, 200, 100, (250, 255, 250), ' Так ')
                            confirm_no  = Knopka(300, 200, 100, (255, 250, 250), ' Ні ' )
                            window.fill(COLOR)
                            confirm_yes.f()
                            confirm_no.f()
                            Info(30,100,50,(0,0,0),'Справді хочеш вийти?').f()
                            confirm = True
                            while confirm:
                                mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                                for event in pygame.event.get():
                                    if event.type == pygame.QUIT:
                                        pygame.quit()
                                        sys.exit()
                                if confirm_yes.g():
                                    return True
                                if confirm_no.g():
                                    confirm = False

                                update()

                    update()
        for i in knopky1[2]:
            i.f()
            if pygame.Rect(i.x,i.y,i.x_p,i.y_p).clipline(movement_line):
                lvl_work = False
        update()

    return False

def hard_game(lvl1=[[12,12,12,12],[23,23,23,23],[43,43,43,43]]):
    knopky1 = [[Knopka2(0,0,10,500), Knopka2(0, 0, 500, 10), Knopka2(490, 0, 10, 500), Knopka2(0, 490, 500, 10)],[],[]]
    for i in lvl1[0]:
        stina = Knopka2(i[0],i[1],i[2],i[3],(0,0,0))
        knopky1[0].append(stina)
    for i in lvl1[2]:
        stina = Knopka2(i[0],i[1],i[2],i[3],(250,80,80))
        knopky1[2].append(stina)
    mysha.x, mysha.y = pygame.mouse.get_pos()
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
        window.fill(COLOR)
        old_position = Vector2(mysha.x, mysha.y)
        mysha.x, mysha.y = pygame.mouse.get_pos()
        new_position = Vector2(mysha.x, mysha.y)
        movement_line = (old_position, new_position)
        for i in knopky1[0]:
            i.f()
            if pygame.Rect(i.x, i.y, i.x_p, i.y_p).clipline(movement_line):
                return True
        for i in knopky1[2]:
            i.f()
            if pygame.Rect(i.x,i.y,i.x_p,i.y_p).clipline(movement_line):
                return False
        update()

def update(fps:int=700):
    pygame.display.update()
    clock.tick(fps)

def create_level():
    p1 = Knopka2 (0,0,0,0,(100,100,100))
    a1 = 0
    a2 = 0
    p1.x   = 500
    p1.y   = 500
    p1.x_p = 0
    p1.y_p = 0 
    walls = [[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10]]
    starts = []
    ends = []
    a = 0
    c = True
    c2= True
    creator_work = True
    while creator_work:
        window.fill(COLOR)
        x_pos, y_pos = pygame.mouse.get_pos()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
        c = True
        for i in walls:
            p = Knopka2 (i[0],i[1],i[2],i[3],(0,0,0))
            p.f()
            if [ p1.x , p1.y , p1.x_p , p1.y_p ] == i:
                c = False
        for i in starts:
            p = Knopka2 (i[0],i[1],i[2],i[3],(10,250,10))
            p.f()
            if [ p1.x , p1.y , p1.x_p , p1.y_p ] == i:
                c = False
        for i in ends:
            p = Knopka2 (i[0],i[1],i[2],i[3],(250,10,10))
            p.f()
            if [ p1.x , p1.y , p1.x_p , p1.y_p ] == i:
                c = False
        keys = pygame.key.get_pressed()
        if keys[pygame.K_ESCAPE]:
            creator_work = False
        if keys[pygame.K_1]:
            a = 1
            p1.ko = (40,40,40)
        if keys[pygame.K_2]:
            a = 2
            p1.ko = (40,205,40)
        if keys[pygame.K_3]:
            a = 3
            p1.ko = (205,40,40)
        if keys[pygame.K_LEFT]:
            a1 = x_pos
            a2 = y_pos
            c = True
        if a1 - x_pos < 0:
            p1.x = a1
            p1.x_p = x_pos - a1
        else:
            p1.x = x_pos
            p1.x_p = a1 - x_pos
        if a2 - y_pos < 0:
            p1.y = a2
            p1.y_p = y_pos - a2
        else:
            p1.y = y_pos
            p1.y_p = a2 - y_pos
        if keys[pygame.K_RIGHT]:
            if c == True:
                if a == 1:
                    walls.append( [ p1.x , p1.y , p1.x_p , p1.y_p ] )
                if a == 2:
                    starts.append( [ p1.x , p1.y , p1.x_p , p1.y_p ] )
                if a == 3:
                    ends.append( [ p1.x , p1.y , p1.x_p , p1.y_p ] )
        try:
            if keys[pygame.K_LCTRL] and keys[pygame.K_z] and c2 == True:
                if a == 1:
                    walls.remove( walls[len(walls) - 1] )
                if a == 2:
                    starts.remove( starts[len(starts) - 1] )
                if a == 3:
                    ends.remove( ends[len(ends) - 1] )
                c2 = False
            if not keys[pygame.K_z]:
                c2 = True
            p1.f()
        except: pass

        pygame.display.update()
        clock.tick(60)
    riwni2.append( [ walls, starts, ends ])

campaign_play_text = '  Поїхали!'
hard_record_str = ''
riwni2 = [[':O']]
play_size = 100
# hmm = 0

play = Knopka(500//2-play_size/2,500//2-play_size/2,play_size,(255,255,255),"Грати")
out = Knopka(420,20,60,(255,255,255),"Вийти")

# lang = Info(5,350,40,(0,0,0), "Мова")
# ua = Knopka(10, 390, 80, (255, 255, 255), 'Українська')
# eng = Knopka(100, 390, 80, (255, 255, 255), 'English')

mouse_pos = [0,0]
program_work = True
while program_work:
    window.fill(COLOR)
    mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
    keys = pygame.key.get_pressed()
    mouse_keys = pygame.mouse.get_pressed()
    if out.g():
        pygame.quit()
    else:
        for ev in pygame.event.get():
            if ev.type == pygame.QUIT:
                pygame.quit()
    
    # ua.f()
    # eng.f()
    # lang.f()
    out.f()
    play.f()

    # if ua.g():
    #     hmm = 0
    # if eng.g():
    #     hmm = 1

    if play.g():
        play_b = True
        back = Knopka(5, 5, 50, (255, 255, 255), ' Назад')

        campaign = Knopka(60, 60, 100, (255, 255, 255), '  Кампанія')
        hardcore = Knopka(60, 340, 100, (255, 255, 255), '  Хардкор ')
        redactor = Knopka(340, 60, 100, (255, 255, 255), ' Редактор ')
        random = Knopka(340, 340, 100, (255, 255, 255), '   Випадковий')

        while play_b:
            for ev in pygame.event.get():
                if ev.type == pygame.QUIT:
                    pygame.quit()
            window.fill(COLOR)
            mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()

            campaign.f()
            if campaign.g():
                campaign_b = True
                campaign_i = Info(20, 65, 52, (0, 0, 0), '''
Кампанія - проходьте всі 
{0} рівнів по порядку.

Прогрес зберігається: {1}
'''.format(str(len(riwni1)-1), str(record)))
                campaign_back = Knopka(445, 5, 50, (255, 255, 255), ' Назад')
                campaign_play = Knopka(100, 340, 100, (55, 255, 55), campaign_play_text)
                campaign_newgame = Knopka(300, 340, 100, (255, 55, 55), ' Заново')
                while campaign_b:
                    window.fill(COLOR)
                    mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                    for ev in pygame.event.get():
                        if ev.type == pygame.QUIT:
                            pygame.quit() 
                    
                    campaign_i.f()
                    campaign_back.f()
                    if campaign_back.g():
                        campaign_b = False

                    if record != 1:
                        campaign_newgame.f()
                        if campaign_newgame.g():
                            confirm_yes = Knopka(100, 200, 100, (250, 255, 250), ' Так ')
                            confirm_no  = Knopka(300, 200, 100, (255, 250, 250), ' Ні ' )
                            window.fill(COLOR)
                            confirm_yes.f()
                            confirm_no.f()
                            Info(30, 100, 50, (0, 0, 0), 'Справді хочеш \nпочати нову гру?').f()
                            confirm = True
                            while confirm:
                                mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                                for event in pygame.event.get():
                                    if event.type == pygame.QUIT:
                                        pygame.quit()

                                if confirm_yes.g():
                                    record = 1
                                    save_progres()
                                    campaign_i = Info(20, 65, 52, (0, 0, 0), '''
Кампанія - проходьте всі 
{0} рівнів по порядку.

Прогрес зберігається: {1}
'''.format(str(len(riwni1)-1), str(record)))
                                    # for _ in range(len(riwni1) - 1):
                                    #     if game(riwni1[record], i):
                                    #         break
                                    #     record += 1
                                    confirm = False

                                if confirm_no.g():
                                    confirm = False

                                update()

                    campaign_play.f()
                    if campaign_play.g():
                        i = True
                        for _ in range(len(riwni1) - record):
                            if game(riwni1[record], i):
                                break
                            i = False
                            record += 1
                            save_progres()
                        if record != 1:
                            campaign_play_text = " Продовжити  "
                            campaign_play = Knopka(100, 340, 100, (55, 255, 55), campaign_play_text)
                            campaign_i = Info(20, 65, 52, (0, 0, 0), '''
Кампанія - проходьте всі 
{0} рівнів по порядку.

Прогрес зберігається: {1}
'''.format(str(len(riwni1)-1), str(record)))

                    update()
            hardcore.f()
            if hardcore.g():
                hardcore_b = True
                hardcore_i = Info(20, 65, 50, (0, 0, 0), '''
Хардкор - після поразки
доведеться починати всю
гру заново
 {0}
'''.format(hard_record_str))
                hardcore_back = Knopka(445, 5, 50, (255, 255, 255), ' Назад')
                hardcore_play = Knopka(200, 340, 100, (55, 255, 55), '  Поїхали!')
                while hardcore_b:
                    window.fill(COLOR)
                    mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                    for ev in pygame.event.get():
                        if ev.type == pygame.QUIT:
                            pygame.quit()
                    
                    hardcore_i.f()
                    hardcore_back.f()
                    if hardcore_back.g():
                        hardcore_b = False

                    hardcore_play.f()
                    if hardcore_play.g():
                        hardcore_level = 1
                        end_type = False
                        r = COLOR[0]
                        g = COLOR[1]
                        b = COLOR[2]
                        for _ in range(len(riwni1) - 1):
                            if hard_game(riwni1[hardcore_level]):
                                end_type = True
                                break
                            if hard_record_int < hardcore_level:
                                hard_record_int = hardcore_level
                            if hard_record_str != "\nТи пройшов всі \nрівні за одну спробу":
                                hard_record_str = '\nРекорд: ' + str(hard_record_int)
                            hardcore_level += 1
                            COLOR = (r, g, b)
                            if r < 220:
                                r += 1
                            if g > 110:
                                g -= 1
                            if b > 150:
                                b -= 1
                        if end_type:
                            mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                            owwa = Info(10, 10, 70, (0, 0, 0), 'Нажаль \nу тебе не вийшло')
                            save_progres()
                            if mouse_pos[1] > 300:
                                plak_y = 180
                            else:
                                plak_y = 320
                            plak = Knopka(50, plak_y, 100, (255, 255, 255), '        :(')
                            while True:
                                mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                                window.fill(COLOR)
                                owwa.f()
                                plak.f()
                                for ev in pygame.event.get():
                                    if ev.type == pygame.QUIT:
                                        pygame.quit()

                                if r > 150:
                                    r -= 1
                                if g < 150:
                                    g += 1
                                if b < 255:
                                    b += 1
                                COLOR = (r, g, b)

                                if plak.g():
                                    break

                                update()
                        else:
                            save_progres()
                            mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                            tak = Info(10, 10, 70, (0, 0, 0), 'Перемога!!! \nТи пройшов')
                            if mouse_pos[1] > 300:
                                yo_y = 180
                            else:
                                yo_y = 320
                            yo = Knopka(50, yo_y, 100, (255, 255, 255), '        ;)')
                            hard_record_str = "\nТи пройшов всі \nрівні за одну спробу"
                            while True:
                                mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                                window.fill(COLOR)
                                tak.f()
                                yo.f()
                                for ev in pygame.event.get():
                                    if ev.type == pygame.QUIT:
                                        pygame.quit()

                                if r > 150:
                                    r -= 1
                                if g < 150:
                                    g += 1
                                if b < 255:
                                    b += 1
                                COLOR = (r, g, b)

                                if yo.g():
                                    break

                                update()
                        COLOR = (150, 150, 255)
                        hardcore_i = Info(20, 65, 50, (0, 0, 0), '''
Хардкор - після поразки
доведеться починати всю
гру заново
 {0}
'''.format(hard_record_str))

                    update()
            redactor.f()
            if redactor.g():
                redactor_b = True
                redactor_i = Info(20, 65, 50, (0, 0, 0), '''
Редактор - ти можеш
створити свій рівень!
''')
                redactor_back = Knopka(445, 5, 50, (255, 255, 255), ' Назад')
                redactor_create = Knopka(100, 380, 100, (255, 255, 255), '  Створити')
                redactor_play = Knopka(300, 380, 100, (255, 255, 255), 'Грати')
                while redactor_b:
                    window.fill(COLOR)
                    mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                    for ev in pygame.event.get():
                        if ev.type == pygame.QUIT:
                            pygame.quit()

                    redactor_create.f()
                    if redactor_create.g():
                        redactor_create_b = True
                        redactor_create_go = Knopka(200, 80, 100, (255, 255, 255), ' Поїхали ')
                        redactor_create_back = Knopka(5, 5, 50, (255, 255, 255), ' Назад')
                        redactor_create_text = Info(10, 10, 50, (0, 0, 0), '''
стіна - 1
старт - 2
фініш - 3

будувати - ( <- та -> )
відмінти - (LCTRL + Я)

коли рівень побудовано
натисни на - ESC                 
''')
                        while redactor_create_b:
                            window.fill(COLOR)
                            mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                            for ev in pygame.event.get():
                                if ev.type == pygame.QUIT:
                                    pygame.quit()

                            redactor_create_text.f()

                            redactor_create_back.f()
                            if redactor_create_back.g():
                                redactor_create_b = False
                            
                            redactor_create_go.f()
                            if redactor_create_go.g():
                                create_level()
                                window.fill(COLOR)
                                redactor_after_level = Knopka(200, 200, 100, (255, 255, 255), ' Cюди ')
                                redactor_after_level.f()
                                while True:
                                    mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                                    for ev in pygame.event.get():
                                        if ev.type == pygame.QUIT:
                                            pygame.quit()
                                    
                                    if redactor_after_level.g():
                                        break

                                    update()    
                                break
                            update()


                    if len(riwni2) > 1:
                        redactor_play.f()
                        if redactor_play.g():
                            rp_ = redactor_play
                            rp_while = True
                            rp_size = 280
                            rp_spacing = 10
                            while rp_while:
                                rp_level_n = 1
                                rp_buttons = []
                                rp_X = 20
                                rp_Y = 70
                                for _ in range(len(riwni2) - 1):
                                    rp_buttons.append(Knopka(rp_X, rp_Y, rp_size, (255, 255, 255), (3 - len(str(rp_level_n))) * ' ' + str(rp_level_n)))
                                    rp_level_n += 1
                                    rp_X += rp_spacing
                                    rp_X += rp_size
                                    if rp_X + rp_size > 480:
                                        rp_Y += rp_spacing
                                        rp_Y += rp_size
                                        if rp_Y + rp_size > 350:
                                            rp_size -= 10
                                            rp_level_n = -228
                                            break
                                        rp_X = 20

                                rp_while = False
                                if rp_level_n == -228:
                                    rp_while = True
                            rp_b = True
                            rp_back = Knopka(5, 5, 50, (255, 255, 255), ' Назад')
                            rp_text = Info(100, 10, 50, (0, 0, 0), 'Вибери рівень')
                            while rp_b:
                                window.fill(COLOR)
                                mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                                for ev in pygame.event.get():
                                    if ev.type == pygame.QUIT:
                                        pygame.quit()

                                for rp_button in rp_buttons:
                                    rp_button.f()
                                    if rp_button.g():
                                        if not game(riwni2[int(rp_button.text.replace(' ', ''))], True):
                                            window.fill((150, 200, 200))
                                        else:
                                            window.fill((200, 150, 200))
                                        rp_after_level = Knopka(200, 400, 80, (255, 255, 255), ' Cюди ')
                                        rp_after_level.f()
                                        while True:
                                            mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                                            for ev in pygame.event.get():
                                                if ev.type == pygame.QUIT:
                                                    pygame.quit()
                                            
                                            if rp_after_level.g():
                                                break

                                            update()

                                rp_text.f()

                                rp_back.f()
                                if rp_back.g():
                                    rp_b = False
                                
                                update()

                    redactor_i.f()
                    redactor_back.f()
                    if redactor_back.g():
                        redactor_b = False

                    update()
            random.f()
            if random.g():
                random_b = True
                random_i = Info(20, 65, 50, (0, 0, 0), '''
Випадковий режим - грай в 
рівень вибраний навмання
''')
                random_back = Knopka(445, 5, 50, (255, 255, 255), ' Назад')
                random_play = Knopka(200, 380, 100, (55, 255, 55), '  Поїхали!')
                while random_b:
                    window.fill(COLOR)
                    mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                    for ev in pygame.event.get():
                        if ev.type == pygame.QUIT:
                            pygame.quit()
                    
                    random_i.f()
                    random_back.f()
                    if random_back.g():
                        random_b = False

                    random_play.f()
                    if random_play.g():
                        i = game(riwni1[randint(1, len(riwni1) - 1)], True)
                        if not i:
                            window.fill((150, 200, 200))
                            random_after_level = Knopka(200, 200, 100, (255, 255, 255), ' Cюди ')
                            random_after_level.f()
                            while True:
                                mouse_pos[0], mouse_pos[1] = pygame.mouse.get_pos()
                                for ev in pygame.event.get():
                                    if ev.type == pygame.QUIT:
                                        pygame.quit()
                                
                                if random_after_level.g():
                                    break

                                update()    

                    update()

            back.f()
            if back.g():
                play_b = False


            update()
    update()